{"version":3,"file":"static/js/947.a3bc8ac8.chunk.js","mappings":"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","sources":["components/streamViewer/StreamViewer.js","pages/Home.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nexport const StreamViewer = () => {\r\n  const videoRef = useRef(null);\r\n  let socket = useRef(null);\r\n  let peerConnection = useRef(null);\r\n\r\n  const startStream = () => {\r\n    peerConnection.current = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    const protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\r\n    socket.current = new WebSocket(`${protocol}://192.168.0.103:8080`);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log(\"‚úÖ WebSocket –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ\");\r\n    };\r\n\r\n    socket.current.onmessage = async (event) => {\r\n      try {\r\n        const message = JSON.parse(event.data);\r\n        console.log(\"üì© –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:\", message);\r\n\r\n        if (message.offer) {\r\n          console.log(\"üé• –û—Ç—Ä–∏–º–∞–Ω–æ offer:\", message.offer);\r\n          await peerConnection.current.setRemoteDescription(\r\n            new RTCSessionDescription(message.offer)\r\n          );\r\n          const answer = await peerConnection.current.createAnswer();\r\n          await peerConnection.current.setLocalDescription(answer);\r\n          socket.current.send(JSON.stringify({ answer }));\r\n        } else if (message.iceCandidate) {\r\n          console.log(\"üßä –û—Ç—Ä–∏–º–∞–Ω–æ iceCandidate:\", message.iceCandidate);\r\n          await peerConnection.current.addIceCandidate(\r\n            new RTCIceCandidate(message.iceCandidate)\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n\r\n    socket.current.onerror = (err) => {\r\n      console.error(\"‚ùå –ü–æ–º–∏–ª–∫–∞ WebSocket:\", err);\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.log(\"‚ö†Ô∏è WebSocket –∑'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ\");\r\n    };\r\n\r\n    peerConnection.current.ontrack = (event) => {\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = event.streams[0];\r\n      }\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    startStream();\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === \"visible\") {\r\n        console.log(\"üîÑ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É, –ø–µ—Ä–µ–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...\");\r\n        if (socket.current) socket.current.close();\r\n        if (peerConnection.current) peerConnection.current.close();\r\n        startStream();\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => {\r\n      if (socket.current) socket.current.close();\r\n      if (peerConnection.current) peerConnection.current.close();\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n    };\r\n  }, []);\r\n\r\n  return <video ref={videoRef} autoPlay playsInline />;\r\n};\r\n","import { StreamViewer } from \"../components/streamViewer/StreamViewer\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É!</h1>\r\n      <p>\r\n        –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –≤—ñ–¥–µ–æ –∑ –≤—É–ª–∏–∫–∞ —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é\r\n        –ø—Ä–æ –±–¥–∂—ñ–ª—å–Ω–∏—Ü—Ç–≤–æ.\r\n      </p>\r\n\r\n      <h2>üìπ –ü—Ä—è–º–∏–π –µ—Ñ—ñ—Ä –∑ –≤—É–ª–∏–∫–∞</h2>\r\n      <StreamViewer />\r\n\r\n      <h2>üêù –©–æ –º–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ?</h2>\r\n      <p>–û—Ä–µ–Ω–¥–∞ –≤—É–ª–∏–∫—ñ–≤, –ø—Ä–æ–¥–∞–∂ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó —Ç–∞ –Ω–∞–≤—á–∞–Ω–Ω—è –¥–ª—è –ø–∞—Å—ñ—á–Ω–∏–∫—ñ–≤.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["StreamViewer","videoRef","useRef","socket","peerConnection","startStream","current","RTCPeerConnection","iceServers","urls","protocol","window","location","WebSocket","concat","onopen","console","log","onmessage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","message","answer","wrap","_context","prev","next","JSON","parse","data","offer","setRemoteDescription","RTCSessionDescription","createAnswer","sent","setLocalDescription","send","stringify","iceCandidate","addIceCandidate","RTCIceCandidate","t0","error","stop","_x","apply","arguments","onerror","err","onclose","ontrack","srcObject","streams","useEffect","handleVisibilityChange","document","visibilityState","close","addEventListener","removeEventListener","_jsx","ref","autoPlay","playsInline","_jsxs","children"],"sourceRoot":""}