{"version":3,"file":"static/js/956.7cafd308.chunk.js","mappings":"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","sources":["components/button/Button.styled.js","components/button/Button.jsx","components/modal/Modal.styled.js","components/modal/Modal.js","services/hives.js","hooks/useHives.js","constants/prices.js","components/performanceScale/PerformanceScale.jsx","helpers/calculateTotalValue.js","helpers/calculateMaxPerformance.js","helpers/calculateRent.js","components/rentInfo/RentInfo.js","components/сustomTaskForm/CustomTaskForm.js","constants/beekeepingTasks.js","helpers/generateTasksForMonth.js","components/taskSelector/TaskSelector.js","components/taskFilter/TaskFilter.jsx","constants/executors.js","components/taskTable/TaskTable.js","components/contractContent/ContractContent.jsx","components/сontractModal/ContractModal.jsx","helpers/ageOfQueen.js","components/beeHiveCard/BeeHiveCard.styled.js","components/beeHiveCard/BeeHiveCard.jsx","hooks/useLockBodyScroll.js","helpers/calculatePerformance.js","helpers/calculateMandatoryTasksCost.js","pages/HiveCard.jsx","redux/selectors.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const ButtonStyled = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  color: white;\r\n  background-color: #29d1c3;\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  &:hover {\r\n    background-color: #0000ff;\r\n  }\r\n  ${({ variant }) =>\r\n    variant === \"filterBtn\" &&\r\n    css`\r\n      background-color: aqua;\r\n    `}\r\n\r\n  ${({ variant }) =>\r\n    variant === \"formBtn\" &&\r\n    css`\r\n      width: 100%;\r\n    `}\r\n\r\n    ${({ size }) =>\r\n    size === \"medium\" &&\r\n    css`\r\n      padding: 10px;\r\n    `}\r\n\r\n    ${({ size }) =>\r\n    size === \"large\" &&\r\n    css`\r\n      padding: 25px;\r\n      border-radius: 10px;\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ButtonStyled } from \"./Button.styled\";\r\n\r\nexport const Button = ({\r\n  children,\r\n  variant = \"\",\r\n  size = \"medium\",\r\n  type = \"button\",\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <ButtonStyled\r\n      data-testid=\"test-button\"\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.oneOf([\"default\", \"filterBtn\", \"formBtn\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  size: PropTypes.oneOf([\"medium\", \"large\"]),\r\n  onClick: PropTypes.func,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.8); /* Темний фон */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* Високий пріоритет */\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  position: relative;\r\n  max-width: 90vw;\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Backdrop } from \"./Modal.styled\";\r\nimport { ModalContent } from \"./Modal.styled\";\r\n\r\nexport const Modal = ({ isOpen, onClose, children }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <Backdrop onClick={onClose}>\r\n      <ModalContent onClick={(e) => e.stopPropagation()}>\r\n        {children}\r\n      </ModalContent>\r\n    </Backdrop>,\r\n    document.getElementById(\"modal-root\") // Вузол DOM, де рендериться модальне вікно\r\n  );\r\n};\r\n","import {\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  doc,\r\n  updateDoc,\r\n  setDoc,\r\n  arrayUnion,\r\n} from \"firebase/firestore\";\r\n\r\nimport db from \"../firebase\";\r\n\r\nexport const fetchAllHives = async () => {\r\n  const querySnapshot = await getDocs(collection(db, \"hives\"));\r\n  const data = querySnapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }));\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchHiveById = async ({ hiveId }) => {\r\n  if (typeof hiveId !== \"string\") {\r\n    throw new Error(\"Invalid hive ID\");\r\n  }\r\n  const docRef = doc(db, \"hives\", hiveId);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists()) {\r\n    return {\r\n      id: docSnap.id,\r\n      ...docSnap.data(),\r\n    };\r\n  } else {\r\n    throw new Error(\"Hive not found\");\r\n  }\r\n};\r\n\r\nexport const updateHiveTasks = async ({ hiveId, tasks }) => {\r\n  const hiveDocRef = doc(db, \"hives\", hiveId);\r\n  await updateDoc(hiveDocRef, { tasks }); // Оновлюємо або додаємо поле tasks\r\n};\r\n\r\nexport const updateTaskStatus = async ({ hiveId, taskId, newStatus }) => {\r\n  console.log(hiveId);\r\n  console.log(taskId);\r\n  console.log(newStatus);\r\n\r\n  // Отримуємо посилання на документ вулика\r\n  const hiveRef = doc(db, \"hives\", hiveId);\r\n\r\n  // Завантажуємо поточні дані завдань через getDoc()\r\n  const currentHiveData = await getDoc(hiveRef);\r\n\r\n  if (!currentHiveData.exists()) {\r\n    throw new Error(`Hive with ID ${hiveId} not found`);\r\n  }\r\n\r\n  const tasks = currentHiveData.data().tasks || [];\r\n\r\n  // Оновлюємо конкретне завдання в масиві, переконуючись, що немає undefined\r\n  const updatedTasks = tasks.map((task) => {\r\n    if (task.id === taskId) {\r\n      return {\r\n        ...task,\r\n        status: newStatus ?? task.status, // Використовуємо nullish operator, щоб уникнути undefined\r\n        date: task.date ?? null, // Переконуємося, що значення date не є undefined\r\n        cost: task.cost ?? 0, // Установлюємо дефолтне значення для вартості\r\n        duration: task.duration ?? 0, // Установлюємо дефолтне значення для тривалості\r\n        executor: task.executor ?? \"Unknown\", // Установлюємо дефолтне значення для виконавця\r\n      };\r\n    }\r\n    return task;\r\n  });\r\n\r\n  // Оновлюємо документ вулика з новим масивом tasks, перевіряючи, що кожне поле має допустиме значення\r\n  await updateDoc(hiveRef, {\r\n    tasks: updatedTasks,\r\n  });\r\n};\r\n\r\nexport const addSingleTask = async ({ hiveId, task }) => {\r\n  const hiveDocRef = doc(db, \"hives\", hiveId);\r\n  await updateDoc(hiveDocRef, { tasks: arrayUnion(task) }); // Оновлюємо або додаємо поле tasks\r\n};\r\n\r\nexport const deleteHiveTask = async ({ hiveId, tasks }) => {\r\n  const hiveDocRef = doc(db, \"hives\", hiveId);\r\n  await updateDoc(hiveDocRef, { tasks }); // Оновлюємо або видаляємо завдання з масиву tasks\r\n};\r\n\r\n// Функція для додавання завдання в колекцію для підтвердження\r\nexport const addTaskToConfirmationCollection = async (task) => {\r\n  console.log(task);\r\n  const confirmationCollection = collection(db, \"tasksForConfirmation\");\r\n  const taskDocRef = doc(confirmationCollection, task.id); // посилання на документ за id завдання\r\n\r\n  // Перевірка, чи завдання вже існує\r\n  const taskSnapshot = await getDoc(taskDocRef);\r\n  if (!taskSnapshot.exists()) {\r\n    // Якщо завдання ще немає, додаємо його\r\n    await setDoc(taskDocRef, task);\r\n  } else {\r\n    console.log(\r\n      `Task with ID ${task.id} already exists in the confirmation collection`\r\n    );\r\n  }\r\n};\r\n","import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\n\r\nimport {\r\n  fetchAllHives,\r\n  fetchHiveById,\r\n  updateHiveTasks,\r\n  deleteHiveTask,\r\n  addTaskToConfirmationCollection,\r\n  addSingleTask,\r\n  updateTaskStatus,\r\n} from \"../services/hives\";\r\n\r\nexport const useHivesQuery = () => {\r\n  return useQuery({\r\n    queryFn: () => fetchAllHives(),\r\n    queryKey: [\"hives\", \"all\"],\r\n    onError: (err) => console.log(err),\r\n  });\r\n};\r\n\r\nexport const useHive = (hiveId) => {\r\n  return useQuery([\"hive\", hiveId], () => fetchHiveById(hiveId), {\r\n    enabled: !!hiveId, // Запит не виконується, якщо hiveId не існує\r\n  });\r\n};\r\n\r\nexport const useUpdateHiveTasks = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(updateHiveTasks, {\r\n    onSuccess: (data, variables) => {\r\n      // Оновлення кешу для цього вулика після успішного оновлення\r\n      queryClient.invalidateQueries([\"hive\", variables.hiveId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error updating hive tasks:\", error);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useUpdateTaskStatus = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(updateTaskStatus, {\r\n    onSuccess: (data, variables) => {\r\n      // Оновлення кешу для цього вулика після успішного оновлення\r\n      queryClient.invalidateQueries([\"hive\", variables.hiveId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error updating hive tasks:\", error);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useAddSingleTasks = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(addSingleTask, {\r\n    onSuccess: (data, variables) => {\r\n      console.log(data);\r\n\r\n      // Оновлення кешу для цього вулика після успішного оновлення\r\n      queryClient.invalidateQueries([\"hive\", variables.hiveId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error updating hive tasks:\", error);\r\n    },\r\n  });\r\n};\r\n\r\nexport const useDeleteHiveTask = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useMutation(deleteHiveTask, {\r\n    onSuccess: (data, variables) => {\r\n      // Оновлення кешу для цього вулика після успішного видалення\r\n      queryClient.invalidateQueries([\"hive\", variables.hiveId]);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error deleting hive task:\", error);\r\n    },\r\n  });\r\n};\r\n\r\n// Мутація для додавання завдань до колекції завдань для підтвердження\r\nexport const useAddTaskToConfirmation = () => {\r\n  return useMutation(addTaskToConfirmationCollection, {\r\n    onSuccess: () => {\r\n      console.log(\"Task added to confirmation collection\");\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error adding task to confirmation collection:\", error);\r\n    },\r\n  });\r\n};\r\n","export const productPrices = {\r\n  honey: 2.68,\r\n  pollen: 9.75,\r\n  propolis: 73.0,\r\n  wax: 7.32,\r\n  royalJelly: 487.8,\r\n  droneHomogenate: 48.78,\r\n  beeVenom: 30000.0,\r\n};\r\n\r\nexport const hiveComponentPrices = {\r\n  roof: 8.54,\r\n  hiveBody300: 12.2,\r\n  hiveBody145: 7.07,\r\n  bottomPollenCollector: 11.95,\r\n  frame300: 0.3,\r\n  frame145: 0.26,\r\n  wax300: 0.62,\r\n  wax145: 0.37,\r\n};\r\n\r\nexport const frameWithBeesPrices = 4.39;\r\n","import { calculateTotalValue } from \"../../helpers/calculateTotalValue\";\r\nimport { calculateMaxPerformance } from \"../../helpers/calculateMaxPerformance\";\r\n\r\nexport const PerformanceScale = ({ prices, performance, power }) => {\r\n  const totalValue = calculateTotalValue(prices, performance); // Отримуємо загальну вартість продукції\r\n  const maxPerformance = calculateMaxPerformance(power);\r\n\r\n  // Визначаємо ширину шкали залежно від нормалізованого значення\r\n  const scaleWidth = Math.min(100, (totalValue / maxPerformance) * 100) + \"%\"; // Ділимо на менший коефіцієнт\r\n\r\n  return (\r\n    <div>\r\n      {/* Шкала продуктивності */}\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <div style={{ fontWeight: \"bold\", marginBottom: \"10px\" }}>\r\n          Вартість продукції: ${totalValue}\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#e0e0e0\",\r\n            height: \"20px\",\r\n            position: \"relative\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: scaleWidth,\r\n              backgroundColor: \"green\",\r\n              height: \"100%\",\r\n              borderRadius: \"5px\",\r\n              transition: \"width 0.5s ease\", // Анімація зміни ширини\r\n            }}\r\n          ></div>\r\n\r\n          {/* Проміжні поділки */}\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"20%\",\r\n              borderLeft: \"1px solid black\",\r\n              height: \"100%\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"40%\",\r\n              borderLeft: \"1px solid black\",\r\n              height: \"100%\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"60%\",\r\n              borderLeft: \"1px solid black\",\r\n              height: \"100%\",\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"0\",\r\n              left: \"80%\",\r\n              borderLeft: \"1px solid black\",\r\n              height: \"100%\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const calculateTotalValue = (prices, calculatePerformance) => {\r\n  const {\r\n    honey,\r\n    pollenAmount,\r\n    propolisAmount,\r\n    waxAmount,\r\n    royalJellyAmount,\r\n    droneHomogenateAmount,\r\n    beeVenomAmount,\r\n  } = calculatePerformance;\r\n\r\n  // Розрахунок загальної вартості продукції\r\n  const totalValue =\r\n    honey * prices.honey +\r\n    pollenAmount * prices.pollen +\r\n    propolisAmount * prices.propolis +\r\n    waxAmount * prices.wax +\r\n    royalJellyAmount * prices.royalJelly +\r\n    droneHomogenateAmount * prices.droneHomogenate +\r\n    beeVenomAmount * prices.beeVenom;\r\n\r\n  return totalValue.toFixed(2); // Округлюємо до двох знаків після коми\r\n};\r\n","import { productPrices } from \"../constants/prices\";\r\n\r\nexport const calculateMaxPerformance = (power) => {\r\n  // Мед\r\n  let honey = 0;\r\n\r\n  if (power >= 9) honey = 15;\r\n  else if (power === 8) honey = 12;\r\n  else if (power === 7) honey = 11;\r\n  else if (power === 6) honey = 10;\r\n  else if (power === 5) honey = 9;\r\n\r\n  // Пилок\r\n  let pollenAmount = 0;\r\n\r\n  if (power >= 9) pollenAmount = 1;\r\n  else if (power === 8) pollenAmount = 0.9;\r\n  else if (power === 7) pollenAmount = 0.8;\r\n  else if (power === 6) pollenAmount = 0.6;\r\n  else if (power === 5) pollenAmount = 0.5;\r\n\r\n  // Прополіс\r\n  let propolisAmount = 0;\r\n  if (power >= 9) propolisAmount = 0.1;\r\n  else if (power === 8) propolisAmount = 0.08;\r\n  else if (power === 7) propolisAmount = 0.07;\r\n  else if (power === 6) propolisAmount = 0.06;\r\n  else if (power === 5) propolisAmount = 0.05;\r\n\r\n  // Віск\r\n  let waxAmount = 0;\r\n  if (power >= 9) waxAmount = 0.35;\r\n  else if (power === 8) waxAmount = 0.25;\r\n  else if (power === 7) waxAmount = 0.2;\r\n  else if (power === 6) waxAmount = 0.15;\r\n  else if (power === 5) waxAmount = 0.1;\r\n\r\n  // Маточне молочко\r\n  let royalJellyAmount = 0;\r\n  if (power >= 9) royalJellyAmount = 0.1;\r\n  else if (power === 8) royalJellyAmount = 0.08;\r\n  else if (power === 7) royalJellyAmount = 0.05;\r\n  else if (power === 6) royalJellyAmount = 0.03;\r\n  else if (power === 5) royalJellyAmount = 0.02;\r\n\r\n  // Трутневий гомогенат\r\n  let droneHomogenateAmount = 0;\r\n  if (power >= 9) droneHomogenateAmount = 0.15;\r\n  else if (power === 8) droneHomogenateAmount = 0.1;\r\n  else if (power === 7) droneHomogenateAmount = 0.08;\r\n  else if (power === 6) droneHomogenateAmount = 0.06;\r\n  else if (power === 5) droneHomogenateAmount = 0.05;\r\n  // Бджолина отрута\r\n  let beeVenomAmount = 0;\r\n  if (power >= 9) beeVenomAmount = 0.002;\r\n  else if (power === 8) beeVenomAmount = 0.0015;\r\n  else if (power === 7) beeVenomAmount = 0.001;\r\n  else if (power === 6) beeVenomAmount = 0.0008;\r\n  else if (power === 5) beeVenomAmount = 0.0005;\r\n\r\n  const maxAmount =\r\n    honey * productPrices.honey +\r\n    pollenAmount * productPrices.pollen +\r\n    propolisAmount * productPrices.propolis +\r\n    waxAmount * productPrices.wax +\r\n    royalJellyAmount * productPrices.royalJelly +\r\n    droneHomogenateAmount * productPrices.droneHomogenate +\r\n    beeVenomAmount * productPrices.beeVenom;\r\n\r\n  return maxAmount;\r\n};\r\n","import { hiveComponentPrices, frameWithBeesPrices } from \"../constants/prices\";\r\n\r\nexport const calculateHiveRent = (hiveComponents) => {\r\n  const totalComponentCost = Object.entries(hiveComponents).reduce(\r\n    (total, [component, quantity]) => {\r\n      const componentPrice = hiveComponentPrices[component] || 0; // Use price from prices.js\r\n      return total + componentPrice * quantity;\r\n    },\r\n    0\r\n  );\r\n  const yearlyCost = totalComponentCost / 7;\r\n  const monthlyCost = yearlyCost / 12;\r\n\r\n  return monthlyCost * 1.3;\r\n};\r\n\r\nexport const calculateBeeColonyRent = (hivePower) => {\r\n  const totalFrameCost = hivePower * frameWithBeesPrices;\r\n\r\n  const yearlyCost = totalFrameCost;\r\n  const monthlyCost = yearlyCost / 12;\r\n\r\n  return monthlyCost * 1.3;\r\n};\r\n\r\nexport const calculateTotalRent = (hiveConfig, hivePower) => {\r\n  const hiveRent = calculateHiveRent(hiveConfig);\r\n  const beeColonyRent = calculateBeeColonyRent(hivePower);\r\n\r\n  return hiveRent + beeColonyRent;\r\n};\r\n","import {\r\n  calculateHiveRent,\r\n  calculateBeeColonyRent,\r\n} from \"../../helpers/calculateRent\";\r\n\r\nexport const RentInfo = ({ hiveComponents, power, totalRent }) => {\r\n  return (\r\n    <div>\r\n      <h4>\r\n        Вартість оренди вулика з бджолосім'єю на{\" \"}\r\n        <span>{new Date().toLocaleString(\"uk-UA\", { month: \"long\" })}</span>{\" \"}\r\n        місяць:{\" \"}\r\n        <span\r\n          style={{ position: \"relative\", cursor: \"pointer\" }}\r\n          title={`Деталі розрахунку:\\n- Оренда вулика: ${calculateHiveRent(\r\n            hiveComponents\r\n          )}$\\n- Оренда бджолосімї: ${calculateBeeColonyRent(power)}$`}\r\n        >\r\n          {totalRent} $/міс\r\n        </span>\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","export const CustomTaskForm = ({\r\n  customTask,\r\n  handleCustomTaskChange,\r\n  handleAddTask,\r\n  errorMessage,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h4>Створення власного завдання</h4>\r\n      <label>\r\n        Назва<span style={{ color: \"red\" }}> *</span>:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={customTask.name}\r\n          onChange={handleCustomTaskChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Мета<span style={{ color: \"red\" }}> *</span>:\r\n        <input\r\n          type=\"text\"\r\n          name=\"purpose\"\r\n          value={customTask.purpose}\r\n          onChange={handleCustomTaskChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Опис<span style={{ color: \"red\" }}> *</span>:\r\n        <textarea\r\n          name=\"description\"\r\n          value={customTask.description}\r\n          onChange={handleCustomTaskChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Тривалість (хвилини)<span style={{ color: \"red\" }}> *</span>:\r\n        <input\r\n          type=\"number\"\r\n          name=\"duration\"\r\n          value={customTask.duration}\r\n          onChange={handleCustomTaskChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Вартість за годину роботи ($)<span style={{ color: \"red\" }}> *</span>:\r\n        <input\r\n          type=\"number\"\r\n          name=\"costPerHour\"\r\n          value={customTask.costPerHour}\r\n          onChange={handleCustomTaskChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Примітки<span style={{ color: \"red\" }}> *</span>:\r\n        <textarea\r\n          name=\"notes\"\r\n          value={customTask.notes}\r\n          onChange={handleCustomTaskChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      {/* Повідомлення про помилку */}\r\n      {errorMessage && <p style={{ color: \"red\" }}>{errorMessage}</p>}\r\n\r\n      <button onClick={handleAddTask}>Додати власне завдання</button>\r\n    </div>\r\n  );\r\n};\r\n","export const beekeepingTasks = [\r\n  {\r\n    month: [\"березень\"],\r\n    name: \"Весняна ревізія\",\r\n    purpose: [\"health\", \"honey\"],\r\n    description:\r\n      \"Огляд вулика на предмет життєздатності бджолосім'ї, виявлення можливих захворювань або загроз, і оцінка потреби в підгодівлі.\",\r\n    duration: 15, // хвилин\r\n    costPerHour: 15,\r\n    priority: \"обов'язкова\",\r\n    frequency: {\r\n      березень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\r\n      \"березень\",\r\n      \"квітень\",\r\n      \"травень\",\r\n      \"червень\",\r\n      \"липень\",\r\n      \"серпень\",\r\n      \"вересень\",\r\n      \"жовтень\",\r\n    ],\r\n    name: \"Плановий огляд стану бджолосім'ї\",\r\n    purpose: [\"health\"],\r\n    description:\r\n      \"Оцінка стану сім'ї, кількість бджіл, наявність матки, контроль ройового стану, кількість корму, можливі захворювання.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"обов'язкова\",\r\n    frequency: {\r\n      березень: 2,\r\n      квітень: 2,\r\n      травень: 4,\r\n      червень: 4,\r\n      липень: 4,\r\n      серпень: 2,\r\n      вересень: 2,\r\n      жовтень: 2,\r\n    },\r\n  },\r\n  {\r\n    month: [\"лютий\", \"березень\"],\r\n    name: \"Підгодівля канді\",\r\n    purpose: [\"health\", \"power\"],\r\n    description:\r\n      \"Подача цукрової пасти (канді) для підгодівлі бджіл у зимово-весняний період при нестачі кормових запасів.\",\r\n    duration: 5,\r\n    costPerHour: 10,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\"березень\", \"квітень\", \"серпень\", \"вересень\"],\r\n    name: \"Підгодівля сиропом\",\r\n    purpose: [\"health\", \"power\"],\r\n    description:\r\n      \"Підгодівля бджіл цукровим сиропом для підтримки сили сім'ї, стимуляції яйцекладки або підготовки до зими.\",\r\n    duration: 5,\r\n    costPerHour: 10,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\"березень\", \"квітень\", \"травень\"],\r\n    name: \"Розширення сушю\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Додавання суші для збільшення об'єму вулика і розширення медових рамок.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"обов'язкова\",\r\n    frequency: {\r\n      березень: 1,\r\n      квітень: 2,\r\n      травень: 4,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\"],\r\n    name: \"Розширення вощиною\",\r\n    purpose: [\"power\", \"wax\"],\r\n    description:\r\n      \"Додавання вощини для розширення гнізда і стимуляції бджолиних робіт.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"обов'язкова\",\r\n    frequency: {\r\n      квітень: 1,\r\n      травень: 3,\r\n      червень: 4,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\"],\r\n    name: \"Розширення трутневою вощиною\",\r\n    purpose: [\"health\", \"droneHomogenate\"],\r\n    description:\r\n      \"Додавання трутневої вощини для регулювання популяції трутнів, для виробництва трутневого гомогенату а також як метод боротьби з кліщами Варроа.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\"березень\", \"вересень\", \"жовтень\"],\r\n    name: \"Обробіток від кліща Варроа\",\r\n    purpose: [\"health\"],\r\n    description:\r\n      \"Хімічний або природний обробіток вулика для знищення кліщів Варроа.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"обов'язкова\",\r\n    frequency: {\r\n      квітень: 1,\r\n      жовтень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\r\n      \"березень\",\r\n      \"квітень\",\r\n      \"травень\",\r\n      \"червень\",\r\n      \"липень\",\r\n      \"серпень\",\r\n      \"вересень\",\r\n      \"жовтень\",\r\n    ],\r\n    name: \"Заміна матки\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Заміна старої або дефективної матки для поліпшення розвитку бджолосім'ї.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\r\n      \"березень\",\r\n      \"квітень\",\r\n      \"травень\",\r\n      \"червень\",\r\n      \"липень\",\r\n      \"серпень\",\r\n      \"вересень\",\r\n    ],\r\n    name: \"Підсадка матки\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Процедура введення нової матки в сім'ю для покращення її продуктивності.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\r\n      \"березень\",\r\n      \"квітень\",\r\n      \"травень\",\r\n      \"червень\",\r\n      \"липень\",\r\n      \"серпень\",\r\n      \"вересень\",\r\n      \"жовтень\",\r\n    ],\r\n    name: \"Мічення матки\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Мітка на матці для легкого визначення її у вулику під час оглядів.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\"березень\", \"квітень\", \"травень\", \"червень\", \"липень\", \"серпень\"],\r\n    name: \"Посадка матки в кліточку\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Посадка матки у кліточку для забезпечення безпечного введення в сім'ю.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\", \"липень\", \"серпень\"],\r\n    name: \"Збір прополісу\",\r\n    purpose: [\"propolis\"],\r\n    description:\r\n      \"Збір прополісу, який бджоли використовують для герметизації та знезараження вулика.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 2,\r\n      червень: 4,\r\n      липень: 4,\r\n      серпень: 3,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\", \"липень\", \"серпень\", \"грудень\"],\r\n    name: \"Збір пилку\",\r\n    purpose: [\"pollen\"],\r\n    description:\r\n      \"Збір пилку, який використовується для підгодівлі бджіл і комерційного продажу.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      квітень: 5,\r\n      травень: 10,\r\n      червень: 10,\r\n      липень: 5,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\"],\r\n    name: \"Постановка прививочних рамок\",\r\n    purpose: [\"royalJelly\"],\r\n    description:\r\n      \"Додавання прививочних рамок для стимуляції бджіл на вирощування нових маток.\",\r\n    duration: 10,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\"],\r\n    name: \"Прищеплення личинок\",\r\n    purpose: [\"royalJelly\"],\r\n    description:\r\n      \"Прищеплення личинок для формування нових маток та розвитку нових сімей.\",\r\n    duration: 20,\r\n    costPerHour: 20,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\"],\r\n    name: \"Збір маточного молочка\",\r\n    purpose: [\"royalJelly\"],\r\n    description:\r\n      \"Збір маточного молочка, яке використовується для підвищення продуктивності матки та комерційних цілей.\",\r\n    duration: 20,\r\n    costPerHour: 20,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\"],\r\n    name: \"Формування відводків\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Формування відводків для створення нових бджолосімей або їх подальшого продажу.\",\r\n    duration: 30,\r\n    costPerHour: 25,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      квітень: 2,\r\n      травень: 3,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\"],\r\n    name: \"Збір трутневого гомогенату\",\r\n    purpose: [\"droneHomogenate\"],\r\n    description:\r\n      \"Збір трутневого гомогенату, який використовується в медицині і косметології.\",\r\n    duration: 20,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      квітень: 2,\r\n      травень: 2,\r\n    },\r\n  },\r\n  {\r\n    month: [\"березень\"],\r\n    name: \"Збір бджолиного підмору\",\r\n    purpose: [\"health\"],\r\n    description: \"Збір бджолиного підмору для виготовлення настоянок і ліків.\",\r\n    duration: 20,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      березень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\", \"липень\"],\r\n    name: \"Збір бджолиного яду\",\r\n    purpose: [\"beeVenom\"],\r\n    description:\r\n      \"Збір бджолиного яду, який використовується в медицині та косметології.\",\r\n    duration: 20,\r\n    costPerHour: 20,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 1,\r\n      червень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\"квітень\", \"травень\", \"червень\", \"липень\"],\r\n    name: \"Вирізання маточників\",\r\n    purpose: [\"power\"],\r\n    description:\r\n      \"Вирізання маточників для запобігання роїнню або контролю якості маток.\",\r\n    duration: 15,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      квітень: 2,\r\n      травень: 2,\r\n    },\r\n  },\r\n  {\r\n    month: [\"травень\", \"червень\", \"липень\", \"серпень\"],\r\n    name: \"Відбір медових рамок\",\r\n    purpose: [\"honey\"],\r\n    description: \"Відбір рамок з медом для їх подальшої відкачки.\",\r\n    duration: 15,\r\n    costPerHour: 15,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 1,\r\n      червень: 2,\r\n      липень: 2,\r\n      серпень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\"травень\", \"червень\", \"липень\", \"серпень\"],\r\n    name: \"Відкачка меду\",\r\n    purpose: [\"honey\"],\r\n    description: \"Відкачка меду з рамок за допомогою медогонки.\",\r\n    duration: 30,\r\n    costPerHour: 10,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      травень: 1,\r\n      червень: 2,\r\n      липень: 2,\r\n      серпень: 1,\r\n    },\r\n  },\r\n  {\r\n    month: [\r\n      \"березень\",\r\n      \"квітень\",\r\n      \"травень\",\r\n      \"червень\",\r\n      \"липень\",\r\n      \"серпень\",\r\n      \"вересень\",\r\n    ],\r\n    name: \"Перетоплювання воску\",\r\n    purpose: [\"wax\"],\r\n    description:\r\n      \"Перетоплювання старого воску для виготовлення нових воскових листів.\",\r\n    duration: 15,\r\n    costPerHour: 10,\r\n    priority: \"необов'язкова\",\r\n    frequency: {\r\n      березень: 1,\r\n      квітень: 1,\r\n      травень: 1,\r\n      червень: 1,\r\n      липень: 1,\r\n      серпень: 1,\r\n      вересень: 1,\r\n    },\r\n  },\r\n];\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { beekeepingTasks } from \"../constants/beekeepingTasks\";\r\n\r\nexport const generateTasksForMonth = (\r\n  currentMonth,\r\n  hiveId,\r\n  selectedServices\r\n) => {\r\n  const now = new Date();\r\n  const twoDaysBefore = new Date(now.getTime() + 49 * 60 * 60 * 1000); // 48 годин до поточної дати\r\n  const plannedDate = twoDaysBefore.toISOString().slice(0, 16); // Призначення значення за замовчуванням\r\n\r\n  const tasks = beekeepingTasks\r\n    .filter((task) => {\r\n      // Завдання має бути доступне для поточного місяця\r\n      const isCurrentMonth = task.month.includes(currentMonth);\r\n\r\n      // Завдання обов'язкове\r\n      const isRequiredTask = task.priority === \"обов'язкова\";\r\n\r\n      // Отримати список обраних сервісів\r\n      // const selectedServices = Object.entries(additionalServices)\r\n      //   .filter(([_, isSelected]) => isSelected) // Враховуються лише обрані сервіси\r\n      //   .map(([service]) => service);\r\n\r\n      // Додатковий сервіс відповідає завданню\r\n      const matchesSelectedServices =\r\n        Array.isArray(task.purpose) &&\r\n        task.purpose.length > 0 &&\r\n        task.purpose.some((purpose) => selectedServices.includes(purpose));\r\n\r\n      // Завдання додається, якщо:\r\n      // 1. Воно обов'язкове\r\n      // 2. Відповідає обраному сервісу\r\n      // 3. І все це доступне у поточному місяці\r\n      return isCurrentMonth || isRequiredTask || matchesSelectedServices;\r\n    })\r\n    .map((task) => ({\r\n      id: uuidv4(),\r\n      hiveId,\r\n      name: task.name,\r\n      purpose: task.purpose,\r\n      description: task.description,\r\n      cost: task.duration * (task.costPerHour / 60),\r\n      plannedDate,\r\n      duration: task.duration,\r\n      status: \"Pending\",\r\n      executor: null,\r\n      date: null,\r\n      notes: \"\",\r\n      priority: task.priority || null,\r\n      frequency: task.frequency || null,\r\n    }));\r\n  return tasks;\r\n};\r\n\r\nexport const unifyTask = (task, hiveId) => {\r\n  const now = new Date();\r\n  const twoDaysBefore = new Date(now.getTime() + 49 * 60 * 60 * 1000); // 48 годин до поточної дати\r\n  const plannedDate = twoDaysBefore.toISOString().slice(0, 16); // Призначення значення за замовчуванням\r\n\r\n  return {\r\n    id: uuidv4(), // Генеруємо унікальний ID для кожного завдання\r\n    hiveId,\r\n    name: task.name,\r\n    purpose: task.purpose,\r\n    description: task.description,\r\n    cost: task.cost || task.duration * (task.costPerHour / 60),\r\n    plannedDate,\r\n    duration: task.duration,\r\n    status: \"Pending\",\r\n    executor: null,\r\n    date: null,\r\n    notes: task.notes || \"\",\r\n    priority: task.priority || null,\r\n  };\r\n};\r\n\r\nexport const generateMissingTasks = (\r\n  currentTasks,\r\n  requiredTasks,\r\n  currentMonth,\r\n  hiveId\r\n) => {\r\n  const missingTasks = [];\r\n\r\n  requiredTasks.forEach((task) => {\r\n    const currentTaskCount = currentTasks.filter(\r\n      (t) => t.name === task.name\r\n    ).length;\r\n\r\n    const requiredCount = task.frequency ? task.frequency[currentMonth] : 1; // Частота завдання для поточного місяця\r\n    if (currentTaskCount < requiredCount) {\r\n      const tasksToGenerate = requiredCount - currentTaskCount;\r\n\r\n      for (let i = 0; i < tasksToGenerate; i++) {\r\n        const newTask = unifyTask(task, hiveId); // Використовуємо unifyTask для створення нового завдання\r\n        missingTasks.push(newTask);\r\n      }\r\n    }\r\n  });\r\n\r\n  return missingTasks;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { CustomTaskForm } from \"../сustomTaskForm/CustomTaskForm\";\r\nimport { beekeepingTasks } from \"../../constants/beekeepingTasks\";\r\nimport { unifyTask } from \"../../helpers/generateTasksForMonth\";\r\nimport { useUpdateHiveTasks, useAddSingleTasks } from \"../../hooks/useHives\";\r\nimport { addTaskToHive } from \"../../redux/hivesSlice\";\r\n\r\nexport const TaskSelector = ({ hiveId }) => {\r\n  const dispatch = useDispatch();\r\n  // Стан для обраного завдання\r\n  const [selectedTask, setSelectedTask] = useState(\"\");\r\n  const { mutate: updateTasks } = useUpdateHiveTasks();\r\n  const { mutate: addSingleTask } = useAddSingleTasks();\r\n  const [customTask, setCustomTask] = useState({\r\n    name: \"\",\r\n    purpose: \"\",\r\n    description: \"\",\r\n    duration: \"\",\r\n    costPerHour: \"\",\r\n    notes: \"\",\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // Обробник зміни полів введення для власного завдання\r\n  const handleCustomTaskChange = (e) => {\r\n    setCustomTask({\r\n      ...customTask,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // Перевірка на заповнення всіх полів\r\n  const validateCustomTaskFields = () => {\r\n    const { name, purpose, description, duration, costPerHour } = customTask;\r\n    if (!name || !purpose || !description || !duration || !costPerHour) {\r\n      setErrorMessage(\"Будь ласка, заповніть усі обов'язкові поля.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Функція для додавання обраного завдання\r\n  const handleAddTask = () => {\r\n    if (selectedTask === \"custom\") {\r\n      const unifiedTask = unifyTask(customTask, hiveId);\r\n      if (!validateCustomTaskFields()) return;\r\n      // Якщо обране власне завдання\r\n      // addSingleTask({\r\n      //   hiveId: hiveId,\r\n      //   task: unifiedTask,\r\n      // });\r\n      dispatch(addTaskToHive({ hiveId, newTask: unifiedTask }));\r\n    } else {\r\n      // Якщо обране завдання зі списку\r\n      const task = beekeepingTasks.find((t) => t.name === selectedTask);\r\n      console.log(task);\r\n\r\n      if (task) {\r\n        const unifiedTask = unifyTask(task, hiveId);\r\n        console.log(unifiedTask);\r\n\r\n        // addTaskToTable((prevTasks) => [unifiedTask, ...prevTasks]); // Викликаємо функцію, щоб додати завдання у таблицю\r\n        // addSingleTask({\r\n        //   hiveId: hiveId,\r\n        //   task: unifiedTask,\r\n        // });\r\n        dispatch(addTaskToHive({ hiveId, newTask: unifiedTask }));\r\n      }\r\n    }\r\n    // Очистити стан після додавання\r\n    setSelectedTask(\"\");\r\n    setCustomTask({\r\n      name: \"\",\r\n      purpose: \"\",\r\n      description: \"\",\r\n      duration: \"\",\r\n      costPerHour: \"\",\r\n      notes: \"\",\r\n    });\r\n    setErrorMessage(\"\"); // Очистити повідомлення про помилку після успішного додавання\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"taskSelect\">Виберіть завдання: </label>\r\n      <select\r\n        id=\"taskSelect\"\r\n        value={selectedTask}\r\n        onChange={(e) => setSelectedTask(e.target.value)}\r\n      >\r\n        <option value=\"\" disabled>\r\n          Виберіть завдання\r\n        </option>\r\n        {beekeepingTasks.map((task) => (\r\n          <option key={task.name} value={task.name}>\r\n            {task.name}\r\n          </option>\r\n        ))}\r\n        <option value=\"custom\">Створити власне завдання</option>\r\n      </select>\r\n      {/* Рендеримо форму для створення власного завдання, якщо вибраний пункт \"Створити власне завдання\" */}\r\n      {selectedTask === \"custom\" && (\r\n        <CustomTaskForm\r\n          customTask={customTask}\r\n          handleCustomTaskChange={handleCustomTaskChange}\r\n          handleAddTask={handleAddTask}\r\n          errorMessage={errorMessage}\r\n        />\r\n      )}\r\n      {selectedTask !== \"custom\" && (\r\n        <button onClick={handleAddTask}>Додати завдання</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { selectTasksByStatus } from \"../../redux/selectors\";\r\n\r\nexport const TaskFilter = ({\r\n  hiveId,\r\n  handleFilter,\r\n  handleRequiredTasks,\r\n  useRequiredTasks,\r\n}) => {\r\n  const [activeFilter, setActiveFilter] = useState(null);\r\n  const approvedTasks = useSelector((state) =>\r\n    selectTasksByStatus(state, hiveId, \"Approved\")\r\n  );\r\n  const doneTasks = useSelector((state) =>\r\n    selectTasksByStatus(state, hiveId, \"Done\")\r\n  );\r\n  const reviewTasks = useSelector((state) =>\r\n    selectTasksByStatus(state, hiveId, \"Under Review\")\r\n  );\r\n\r\n  const handleButtonClick = (filterName, tasks) => {\r\n    setActiveFilter(filterName); // Змінюємо активний фільтр\r\n    handleFilter(tasks); // Викликаємо передану функцію фільтрації\r\n  };\r\n\r\n  const buttonStyle = (filterName) =>\r\n    filterName === activeFilter\r\n      ? { backgroundColor: \"blue\", color: \"white\" } // Активний фільтр\r\n      : { backgroundColor: \"white\", color: \"black\" }; // Неактивний фільтр\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          handleRequiredTasks();\r\n          setActiveFilter(null); // Скидаємо активний фільтр\r\n        }}\r\n        style={buttonStyle(null)}\r\n      >{`All required ${\r\n        useRequiredTasks ? \"+\" : \"-\"\r\n      } other possible tasks`}</button>\r\n\r\n      <button\r\n        onClick={() => handleButtonClick(\"Approved\", approvedTasks)}\r\n        style={buttonStyle(\"Approved\")}\r\n      >\r\n        Approved\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => handleButtonClick(\"Done\", doneTasks)}\r\n        style={buttonStyle(\"Done\")}\r\n      >\r\n        Done\r\n      </button>\r\n\r\n      <button\r\n        onClick={() => handleButtonClick(\"Under Review\", reviewTasks)}\r\n        style={buttonStyle(\"Under Review\")}\r\n      >\r\n        Under Review\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import natAvatar from \"../images/avatars/nat.png\";\r\nimport yarAvatar from \"../images/avatars/yar.png\";\r\n\r\nexport const executors = [\r\n  { id: 1, name: \"Nataly\", avatar: natAvatar },\r\n  { id: 2, name: \"Yaroslav\", avatar: yarAvatar },\r\n  { id: 3, name: \"Executor 3\", avatar: null }, // Відсутня аватарка\r\n  // Додаткові виконавці\r\n];\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { TaskSelector } from \"../taskSelector/TaskSelector\";\r\nimport { TaskFilter } from \"../taskFilter/TaskFilter\";\r\nimport { useUpdateHiveTasks } from \"../../hooks/useHives\";\r\nimport { updateTasksStatus } from \"../../redux/hivesSlice\";\r\nimport { executors } from \"../../constants/executors\"; // Імпортуємо масив виконавців\r\nimport placeholderAvatar from \"../../images/avatars/defaultAvatar.jpg\"; // Заглушка для аватарок\r\n\r\nexport const TaskTable = React.memo(\r\n  ({\r\n    tasks,\r\n    onConfirmTask,\r\n    onDeleteTask,\r\n    currentMonth,\r\n    hiveId,\r\n    onPlannedTasksTotalCostChange,\r\n    handleRequiredTasks,\r\n    useRequiredTasks,\r\n  }) => {\r\n    const { mutate: updateTasks } = useUpdateHiveTasks();\r\n    const dispatch = useDispatch();\r\n    const [tempDate, setTempDate] = useState({});\r\n    const [selectedExecutor, setSelectedExecutor] = useState({});\r\n    const [newNotes, setNewNotes] = useState({});\r\n    const [filteredTasks, setFilteredTasks] = useState(tasks);\r\n\r\n    const handleDateChange = (taskId, newDate) => {\r\n      if (isDateValid(newDate)) {\r\n        setTempDate({ ...tempDate, [taskId]: newDate });\r\n      } else {\r\n        alert(\"Виберіть дату не пізніше ніж за 24 години до початку!\");\r\n      }\r\n    };\r\n\r\n    const handleFilterChange = (tasks) => {\r\n      setFilteredTasks(tasks);\r\n    };\r\n\r\n    const handleExecutorChange = (taskId, executor) => {\r\n      setSelectedExecutor({ ...selectedExecutor, [taskId]: executor });\r\n    };\r\n\r\n    const handleNotesChange = (taskId, note) => {\r\n      setNewNotes({ ...newNotes, [taskId]: note || \" \" });\r\n    };\r\n\r\n    const handleDateBlur = (taskId, property, newValue, e) => {\r\n      e.preventDefault();\r\n\r\n      // Find the task to update\r\n      const getTask = tasks.find((task) => task.id === taskId);\r\n\r\n      if (getTask) {\r\n        // Create a new updated task object\r\n        if (property === \"plannedDate\" && !isDateValid(newValue)) {\r\n          return;\r\n        } else {\r\n          const updatedTask = {\r\n            ...getTask,\r\n            [property]: newValue, // Update the specified property\r\n          };\r\n\r\n          // Dispatch the updated task to update the state\r\n          dispatch(updateTasksStatus({ hiveId, updatedTask })); // оновлюємо redux\r\n          const updatedTasks = tasks.filter((t) => t.status !== \"Pending\");\r\n          updateTasks({ hiveId, updatedTasks }); // оновлюємо firestore\r\n        }\r\n      } else {\r\n        console.error(\"Task not found\");\r\n      }\r\n    };\r\n\r\n    const isDateValid = (date) => {\r\n      const currentDate = new Date();\r\n      const selectedDate = new Date(date);\r\n      return selectedDate - currentDate > 24 * 60 * 60 * 1000; // 24 години в мілісекундах\r\n    };\r\n\r\n    const getTotalCost = useCallback(() => {\r\n      return tasks.reduce((total, task) => {\r\n        if (task.status === \"Done\") {\r\n          return total; // Пропускаємо завдання зі статусом \"Done\"\r\n        }\r\n        return total + (task.cost || 0);\r\n      }, 0);\r\n    }, [tasks]);\r\n\r\n    useEffect(() => {\r\n      setFilteredTasks(tasks);\r\n      onPlannedTasksTotalCostChange(getTotalCost()); // Передаємо нове значення загальної вартості\r\n    }, [tasks, onPlannedTasksTotalCostChange, getTotalCost]);\r\n\r\n    return (\r\n      <>\r\n        <h3>Планові роботи на {currentMonth} місяць</h3>\r\n        <TaskFilter\r\n          hiveId={hiveId}\r\n          handleFilter={handleFilterChange}\r\n          handleRequiredTasks={handleRequiredTasks}\r\n          useRequiredTasks={useRequiredTasks}\r\n        />\r\n        <TaskSelector hiveId={hiveId} />\r\n        {filteredTasks.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Task</th>\r\n                <th>Description</th>\r\n                <th>Duration, min</th>\r\n                <th>Date & Time</th>\r\n                <th>Cost, $</th>\r\n                <th>Executor</th>\r\n                <th>Notes</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredTasks.map((task) => (\r\n                <tr key={task.id}>\r\n                  <td>{task.name}</td>\r\n                  <td>{task.description}</td>\r\n                  <td>{task.duration}</td>\r\n                  <td>\r\n                    {task.status !== \"Done\" &&\r\n                    task.status !== \"Under Review\" ? (\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        value={tempDate[task.id] || task.plannedDate || \"\"}\r\n                        onChange={(e) => {\r\n                          handleDateChange(task.id, e.target.value);\r\n                          handleDateBlur(\r\n                            task.id,\r\n                            \"plannedDate\",\r\n                            e.target.value,\r\n                            e\r\n                          );\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <span>{task.plannedDate}</span>\r\n                    )}\r\n                  </td>\r\n                  <td>{task.cost.toFixed(2)}</td>\r\n                  <td>\r\n                    {task.status !== \"Done\" &&\r\n                    task.status !== \"Under Review\" ? (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row-reverse\",\r\n                          gap: \"5px\",\r\n                        }}\r\n                      >\r\n                        <select\r\n                          value={\r\n                            selectedExecutor[task.id] || task.executor || \"\"\r\n                          }\r\n                          onChange={(e) => {\r\n                            e.preventDefault();\r\n                            handleExecutorChange(task.id, e.target.value);\r\n                            handleDateBlur(\r\n                              task.id,\r\n                              \"executor\",\r\n                              e.target.value,\r\n                              e\r\n                            );\r\n                          }}\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Select Executor\r\n                          </option>\r\n                          {executors.map((executor) => (\r\n                            <option key={executor.id} value={executor.name}>\r\n                              {executor.name}\r\n                            </option>\r\n                          ))}\r\n                          <option value=\"Self\">Self</option>\r\n                        </select>\r\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          <img\r\n                            src={\r\n                              executors.find(\r\n                                (ex) =>\r\n                                  ex.name ===\r\n                                  (selectedExecutor[task.id] || task.executor)\r\n                              )?.avatar || placeholderAvatar\r\n                            }\r\n                            alt=\"Executor Avatar\"\r\n                            style={{\r\n                              width: \"30px\",\r\n                              height: \"30px\",\r\n                              borderRadius: \"50%\",\r\n                              marginLeft: \"8px\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          gap: \"8px\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src={\r\n                            executors.find((ex) => ex.name === task.executor)\r\n                              ?.avatar || placeholderAvatar\r\n                          }\r\n                          alt=\"Executor Avatar\"\r\n                          style={{\r\n                            width: \"30px\",\r\n                            height: \"30px\",\r\n                            borderRadius: \"50%\",\r\n                          }}\r\n                        />\r\n                        <span>{task.executor}</span>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <textarea\r\n                      value={newNotes[task.id] || task.notes || \"\"}\r\n                      onChange={(e) =>\r\n                        handleNotesChange(task.id, e.target.value)\r\n                      }\r\n                      onBlur={(e) =>\r\n                        handleDateBlur(task.id, \"notes\", e.target.value, e)\r\n                      }\r\n                      disabled={task.status === \"Under Review\"}\r\n                    />\r\n                  </td>\r\n                  <td>{task.status}</td>\r\n                  <td>\r\n                    {task.status !== \"Done\" &&\r\n                      task.status !== \"Under Review\" && (\r\n                        <button\r\n                          onClick={() =>\r\n                            isDateValid(task.plannedDate)\r\n                              ? onConfirmTask(task.id)\r\n                              : alert(\"я ж прошу, вибери нормальну дату\")\r\n                          }\r\n                          disabled={task.selectedExecutor === null}\r\n                        >\r\n                          Confirm\r\n                        </button>\r\n                      )}\r\n                    {task.status !== \"Done\" &&\r\n                      task.status !== \"Under Review\" && (\r\n                        <button\r\n                          onClick={() => onDeleteTask(task.id)}\r\n                          disabled={task.priority === \"обов'язкова\"}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td colSpan=\"5\" style={{ fontWeight: \"bold\" }}>\r\n                  Total Cost:\r\n                </td>\r\n                <td style={{ fontWeight: \"bold\" }}>\r\n                  ${getTotalCost().toFixed(2)}\r\n                </td>\r\n                <td colSpan=\"3\"></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No tasks for this month</p>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => prevProps.tasks === nextProps.tasks\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"../button/Button\";\r\n\r\nexport const ContractContent = ({ contractText, onSignContract }) => {\r\n  return (\r\n    <div>\r\n      <h2>Договір оренди</h2>\r\n      <p>{contractText}</p>\r\n      <Button variant=\"formBtn\" onClick={onSignContract}>\r\n        Підписати договір\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Modal } from \"../modal/Modal\";\r\nimport { ContractContent } from \"../contractContent/ContractContent\";\r\n\r\nexport const ContractModal = ({\r\n  isOpen,\r\n  onClose,\r\n  contractText,\r\n  onSignContract,\r\n}) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose}>\r\n      <ContractContent\r\n        contractText={contractText}\r\n        onSignContract={onSignContract}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","export const ageOfQueen = (dateOfBirthd) => {\r\n  const today = new Date(); // Поточна дата\r\n  const birthDate = new Date(dateOfBirthd); // Дата народження\r\n\r\n  // Обчислюємо різницю в роках і місяцях\r\n  const yearsDiff = today.getFullYear() - birthDate.getFullYear();\r\n  const monthsDiff = today.getMonth() - birthDate.getMonth();\r\n\r\n  // Загальна кількість місяців з урахуванням років і місяців\r\n  let ageInMonths = yearsDiff * 12 + monthsDiff;\r\n\r\n  // Якщо день народження ще не настав цього місяця, зменшуємо на 1 місяць\r\n  if (today.getDate() < birthDate.getDate()) {\r\n    ageInMonths--;\r\n  }\r\n\r\n  return ageInMonths;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SwiperWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const MainSwiperWrapper = styled.div`\r\n  width: 400px;\r\n  height: auto;\r\n`;\r\n\r\nexport const ThumbSwiperWrapper = styled.div`\r\n  width: 600px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const SwiperImage = styled.img`\r\n  width: 70%;\r\n  height: 70%;\r\n  object-fit: cover;\r\n  display: block; /* Встановлюємо block, щоб працював margin */\r\n  margin: 0 auto; /* Центруємо зображення */\r\n`;\r\n\r\nexport const ThumbImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nexport const ModalImage = styled.img`\r\n  max-width: 90vw; /* Зображення займає 90% ширини екрану */\r\n  max-height: 90vh; /* Зображення займає 90% висоти екрану */\r\n  object-fit: contain;\r\n  display: block;\r\n  margin: 0 auto;\r\n  transition: transform 0.3s ease; /* Додаємо анімацію при масштабуванні */\r\n  cursor: grab; /* Змінюємо курсор на \"grab\" для вказівки, що зображення можна перетягувати */\r\n\r\n  &:hover {\r\n    cursor: grabbing; /* Змінюємо курсор на \"grabbing\" при наведенні */\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative; /* Для абсолютного позиціонування зображення */\r\n  height: 100%; /* Встановлюємо висоту контейнера */\r\n  overflow: hidden; /* Сховати частини зображення, які виходять за межі контейнера */\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-width: 370px;\r\n  margin: auto;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  text-align: left;\r\n  margin: 0 auto 20px auto;\r\n  max-width: 370px;\r\n`;\r\n","import { useState, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation, Thumbs } from \"swiper/modules\"; // Підключаємо модулі Navigation і Thumbs\r\n\r\nimport \"swiper/swiper-bundle.css\";\r\nimport { Modal } from \"../modal/Modal\";\r\nimport { PerformanceScale } from \"../performanceScale/PerformanceScale\";\r\nimport { RentInfo } from \"../rentInfo/RentInfo\";\r\nimport { TaskTable } from \"../taskTable/TaskTable\";\r\nimport { useLockBodyScroll } from \"../../hooks/useLockBodyScroll\";\r\nimport { Button } from \"../button/Button\";\r\nimport { ContractModal } from \"../сontractModal/ContractModal\";\r\nimport { useUpdateHiveTasks, useDeleteHiveTask } from \"../../hooks/useHives\";\r\nimport {\r\n  updateAgreeWithBasicTech,\r\n  updateAdditionalService,\r\n  updateHiveProperty,\r\n} from \"../../redux/operations\";\r\nimport {\r\n  updateTasksStatus,\r\n  removeTaskFromHive,\r\n  updateHiveTasks,\r\n} from \"../../redux/hivesSlice\";\r\nimport {\r\n  selectHiveById,\r\n  selectIsLoading,\r\n  selectError,\r\n  selectUserProfile,\r\n  selectPlannedTasksCost,\r\n} from \"../../redux/selectors\";\r\nimport { ageOfQueen } from \"../../helpers/ageOfQueen\";\r\nimport { calculatePerformance } from \"../../helpers/calculatePerformance\";\r\nimport { calculateTotalRent } from \"../../helpers/calculateRent\";\r\nimport { productPrices } from \"../../constants/prices\";\r\nimport {\r\n  generateTasksForMonth,\r\n  generateMissingTasks,\r\n} from \"../../helpers/generateTasksForMonth\";\r\nimport { calculateMandatoryTasksCost } from \"../../helpers/calculateMandatoryTasksCost\";\r\n\r\nimport {\r\n  SwiperWrapper,\r\n  MainSwiperWrapper,\r\n  ThumbSwiperWrapper,\r\n  SwiperImage,\r\n  ThumbImage,\r\n  ModalImage,\r\n  ImageContainer,\r\n  Description,\r\n  Wrapper,\r\n} from \"./BeeHiveCard.styled\";\r\n\r\nexport const BeeHiveCard = () => {\r\n  // const currentMonth = new Date().toLocaleString(\"uk-UA\", { month: \"long\" });\r\n  const currentMonth = \"червень\";\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const hiveId = useParams();\r\n  const dispatch = useDispatch();\r\n  const hive = useSelector((state) => selectHiveById(state, hiveId.hiveId));\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const { mutate: updateTasks } = useUpdateHiveTasks();\r\n  const { mutate: deleteTask } = useDeleteHiveTask();\r\n  const [thumbsSwiper, setThumbsSwiper] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isContractModalOpen, setIsContractModalOpen] = useState(false);\r\n  const [activeImage, setActiveImage] = useState(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [startPosition, setStartPosition] = useState({ x: 0, y: 0 });\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [plannedTasksTotalCost, setPlannedTasksTotalCost] = useState(0);\r\n  const [useRequiredTasks, setUseRequiredTasks] = useState(true);\r\n  const userBalance = useSelector(selectUserProfile).balance;\r\n  const plannedTasksCost = useSelector(selectPlannedTasksCost);\r\n\r\n  const selectedServices = useMemo(() => {\r\n    const services = Object.entries(hive.additionalServices)\r\n      .filter(([_, isSelected]) => isSelected) // Враховуються лише обрані сервіси\r\n      .map(([service]) => service);\r\n\r\n    if (hive.agreeWithBasicTech) {\r\n      services.push(\"honey\"); // Додається сервіс honey\r\n    }\r\n\r\n    return services;\r\n  }, [hive.additionalServices, hive.agreeWithBasicTech]); // Додано залежність `agreeWithBasicTech`\r\n\r\n  console.log(hive.lessee);\r\n\r\n  useEffect(\r\n    () => {\r\n      const requiredTasks = generateTasksForMonth(\r\n        currentMonth,\r\n        hiveId.hiveId,\r\n        selectedServices\r\n      ); // Завдання для поточного місяця\r\n\r\n      const missingTasks = generateMissingTasks(\r\n        hive.tasks,\r\n        requiredTasks,\r\n        currentMonth,\r\n        hiveId.hiveId\r\n      );\r\n\r\n      if (useRequiredTasks) {\r\n        const ttasks = [...hive.tasks, ...missingTasks];\r\n        const newTasks = ttasks.filter((task) => {\r\n          const matchesSelectedServices =\r\n            Array.isArray(task.purpose) &&\r\n            task.purpose.length > 0 &&\r\n            task.purpose.some((purpose) => selectedServices.includes(purpose));\r\n\r\n          return (\r\n            task.status !== \"Pending\" ||\r\n            task.priority === \"обов'язкова\" ||\r\n            matchesSelectedServices\r\n          );\r\n        });\r\n        dispatch(updateHiveTasks({ hiveId: hiveId.hiveId, newTasks }));\r\n      } else {\r\n        console.log(\"All tasks for the current month are already present.\");\r\n        const newTasks = [...hive.tasks, ...missingTasks];\r\n        dispatch(updateHiveTasks({ hiveId: hiveId.hiveId, newTasks }));\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [\r\n      currentMonth,\r\n      dispatch,\r\n      hiveId.hiveId,\r\n      useRequiredTasks,\r\n      hive.additionalServices, // Залежність доданого/знятного сервісу\r\n      hive.agreeWithBasicTech,\r\n    ]\r\n  );\r\n\r\n  const handleRequiredTasks = () => {\r\n    setUseRequiredTasks((prevState) => {\r\n      return !prevState;\r\n    });\r\n  };\r\n\r\n  useLockBodyScroll(isModalOpen);\r\n\r\n  if (isLoading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const openModal = (image) => {\r\n    setActiveImage(image);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setActiveImage(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    setIsDragging(true);\r\n    setStartPosition({ x: e.clientX, y: e.clientY });\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging) return;\r\n\r\n    const dx = e.clientX - startPosition.x;\r\n    const dy = e.clientY - startPosition.y;\r\n    setOffset((prevOffset) => ({\r\n      x: prevOffset.x + dx,\r\n      y: prevOffset.y + dy,\r\n    }));\r\n    setStartPosition({ x: e.clientX, y: e.clientY }); // Оновлюємо стартову позицію\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleBasicTechChange = (e) => {\r\n    dispatch(\r\n      updateAgreeWithBasicTech({\r\n        hiveId: hiveId.hiveId,\r\n        value: e.target.checked,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAdditionalServiceChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    dispatch(\r\n      updateAdditionalService({\r\n        hiveId: hiveId.hiveId,\r\n        service: name,\r\n        value: checked,\r\n      })\r\n    );\r\n  };\r\n\r\n  const performance = calculatePerformance(\r\n    hive,\r\n    hive.additionalServices,\r\n    hive.agreeWithBasicTech\r\n  );\r\n\r\n  const handleConfirmTask = (taskId) => {\r\n    const currentTask = hive.tasks.find((task) => task.id === taskId);\r\n\r\n    if (!currentTask) {\r\n      console.error(\"Завдання не знайдено\");\r\n      return;\r\n    }\r\n\r\n    const remainingBalance = userBalance - plannedTasksCost;\r\n\r\n    if (\r\n      currentTask.status !== \"Approved\" &&\r\n      remainingBalance < currentTask.cost\r\n    ) {\r\n      alert(\r\n        \"Недостатньо коштів на балансі для виконання цього завдання. Будь ласка, поповніть баланс.\"\r\n      );\r\n      return;\r\n    }\r\n    const tasksToUpdate = hive.tasks\r\n      .filter((task) => task.status !== \"Pending\" || task.id === taskId)\r\n      .map((task) =>\r\n        task.id === taskId ? { ...task, status: \"Under Review\" } : task\r\n      );\r\n\r\n    const taskToConfirmation = tasksToUpdate.filter(\r\n      (task) => task.id === taskId\r\n    );\r\n\r\n    // setTasks(taskToUpdate); // Оновлюємо стан завдань\r\n    updateTasks({ hiveId: hiveId.hiveId, tasks: tasksToUpdate }); // Оновлюємо Firestore\r\n    dispatch(\r\n      updateTasksStatus({\r\n        hiveId: hiveId.hiveId,\r\n        updatedTask: taskToConfirmation[0],\r\n      })\r\n    );\r\n  };\r\n\r\n  // Функція для видалення завдання\r\n  const handleDeleteTask = (taskId) => {\r\n    // Фільтруємо завдання, видаляючи вибране\r\n    const updatedTasks = hive.tasks.filter(\r\n      (task) => task.id !== taskId && task.status !== \"Pending\"\r\n    );\r\n    // Оновлюємо Firestore, передаючи оновлений масив tasks\r\n    deleteTask({ hiveId: hiveId.hiveId, tasks: updatedTasks });\r\n    // Оновлюємо локальний стан\r\n    dispatch(removeTaskFromHive({ hiveId: hiveId.hiveId, taskId }));\r\n  };\r\n\r\n  const handleOpenContractModal = () => {\r\n    setIsContractModalOpen(true);\r\n  };\r\n\r\n  const handleCloseContractModal = () => {\r\n    setIsContractModalOpen(false);\r\n  };\r\n\r\n  const contractText = `\r\n    Договір оренди вулика та бджолосім'ї...\r\n    Орендодавець: __________\r\n    Орендар: __________\r\n    Вартість оренди: __________\r\n    Заплановані роботи: __________\r\n    Умови договору: __________\r\n  `;\r\n\r\n  const handleSignContract = () => {\r\n    try {\r\n      // Викликаємо асинхронну дію для оновлення властивості \"lessee\"\r\n      dispatch(\r\n        updateHiveProperty({\r\n          hiveId: hiveId.hiveId,\r\n          property: \"lessee\",\r\n          value: user.uid,\r\n        })\r\n      );\r\n\r\n      // Закриваємо модалку після підписання контракту\r\n      handleCloseContractModal();\r\n    } catch (error) {\r\n      console.error(\"Error signing contract:\", error);\r\n      // Тут можна додати обробку помилок\r\n    }\r\n  };\r\n\r\n  const handlePlannedTasksTotalCostChange = (newTotalCost) => {\r\n    setPlannedTasksTotalCost(newTotalCost);\r\n  };\r\n\r\n  const totalRent = calculateTotalRent(hive.hiveComponents, hive.power);\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n        \"I'm a BeehiveCard\"\r\n      </h2>\r\n      {/* Головний Swiper для великого зображення */}\r\n      <SwiperWrapper>\r\n        <MainSwiperWrapper>\r\n          <Swiper\r\n            modules={[Navigation, Thumbs]}\r\n            spaceBetween={10}\r\n            navigation\r\n            thumbs={{\r\n              swiper:\r\n                thumbsSwiper && !thumbsSwiper.destroyed ? thumbsSwiper : null,\r\n            }}\r\n          >\r\n            {hive.images.map((image, index) => (\r\n              <SwiperSlide key={index}>\r\n                <SwiperImage\r\n                  src={image}\r\n                  alt={`Hive Image ${index + 1}`}\r\n                  onClick={() => openModal(image)} // Відкриваємо модальне вікно при кліку\r\n                />\r\n              </SwiperSlide>\r\n            ))}\r\n          </Swiper>\r\n        </MainSwiperWrapper>\r\n\r\n        {/* Swiper для мініатюр */}\r\n        <ThumbSwiperWrapper>\r\n          <Swiper\r\n            modules={[Thumbs]}\r\n            onSwiper={setThumbsSwiper}\r\n            spaceBetween={10}\r\n            slidesPerView={5}\r\n            watchSlidesProgress\r\n          >\r\n            {hive.images.map((image, index) => (\r\n              <SwiperSlide key={index}>\r\n                <ThumbImage src={image} alt={`Thumbnail ${index + 1}`} />\r\n              </SwiperSlide>\r\n            ))}\r\n          </Swiper>\r\n        </ThumbSwiperWrapper>\r\n      </SwiperWrapper>\r\n\r\n      {/* Модальне вікно для великого зображення */}\r\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n        <ImageContainer\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseUp} // Зупиняємо перетягування при виході курсора з області\r\n        >\r\n          <ModalImage\r\n            src={activeImage}\r\n            alt=\"Original Size\"\r\n            style={{\r\n              transform: `scale(2.2) translate(${offset.x}px, ${offset.y}px)`, // Застосовуємо масштаб і зміщення\r\n            }}\r\n          />\r\n        </ImageContainer>\r\n      </Modal>\r\n      <Description>\r\n        <h4>hive system: {hive.system}</h4>\r\n        <h4>the power of the colony: {hive.power} рамок</h4>\r\n        <h4>breed: {hive.breed}</h4>\r\n        <h4>\r\n          the age of the queen bee: {ageOfQueen(hive.queensBirthday)} місяців\r\n        </h4>\r\n      </Description>\r\n      <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={hive.agreeWithBasicTech}\r\n            onChange={handleBasicTechChange}\r\n          />\r\n          Погоджуюсь застосовувати Базову технологію бджільництва\r\n        </label>\r\n      </div>\r\n\r\n      {/* Виводимо поточний стан чекбоксу */}\r\n      <p style={{ textAlign: \"center\", margin: \"10px 0 20px 0\" }}>\r\n        {hive.agreeWithBasicTech\r\n          ? \"Ви погодились застосовувати Базову технологію бджільництва\"\r\n          : \"Ви ще не погодились застосовувати Базову технологію бджільництва\"}\r\n      </p>\r\n      <PerformanceScale\r\n        prices={productPrices}\r\n        performance={performance}\r\n        power={hive.power}\r\n      />\r\n      {/* Група чекбоксів для додаткових послуг */}\r\n      <Wrapper>\r\n        <h3 style={{ marginBottom: \"20px\" }}>Додаткові послуги:</h3>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"pollen\"\r\n              checked={hive.additionalServices.pollen}\r\n              onChange={handleAdditionalServiceChange}\r\n            />\r\n            Пилок\r\n          </label>\r\n        </div>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"propolis\"\r\n              checked={hive.additionalServices.propolis}\r\n              onChange={handleAdditionalServiceChange}\r\n            />\r\n            Прополіс\r\n          </label>\r\n        </div>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"wax\"\r\n              checked={hive.additionalServices.wax}\r\n              onChange={handleAdditionalServiceChange}\r\n            />\r\n            Віск\r\n          </label>\r\n        </div>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"royalJelly\"\r\n              checked={hive.additionalServices.royalJelly}\r\n              onChange={handleAdditionalServiceChange}\r\n            />\r\n            Маточне молочко\r\n          </label>\r\n        </div>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"droneHomogenate\"\r\n              checked={hive.additionalServices.droneHomogenate}\r\n              onChange={handleAdditionalServiceChange}\r\n            />\r\n            Трутневий гомогенат\r\n          </label>\r\n        </div>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"beeVenom\"\r\n              checked={hive.additionalServices.beeVenom}\r\n              onChange={handleAdditionalServiceChange}\r\n            />\r\n            Бджолина отрута (сирець)\r\n          </label>\r\n        </div>\r\n      </Wrapper>\r\n\r\n      {/* Виведення стану додаткових послуг */}\r\n      <Wrapper>\r\n        <h4>Обрані послуги:</h4>\r\n        <p>{hive.additionalServices.pollen && \"Пилок\"}</p>\r\n        <p>{hive.additionalServices.propolis && \"Прополіс\"}</p>\r\n        <p>{hive.additionalServices.wax && \"Віск\"}</p>\r\n        <p>{hive.additionalServices.royalJelly && \"Маточне молочко\"}</p>\r\n        <p>\r\n          {hive.additionalServices.droneHomogenate && \"Трутневий гомогенат\"}\r\n        </p>\r\n        <p>{hive.additionalServices.beeVenom && \"Бджолина отрута (сирець)\"}</p>\r\n      </Wrapper>\r\n      <Wrapper>\r\n        <h3\r\n          title=\"Ви отримаєте всю вироблену цією бджолосім'єю продукцію, якої може бути набагато більше, але не менше вказаної продуктивності, яку ми гарантуємо при застосуванні базової технології.\"\r\n          style={{ display: \"inline-block\", cursor: \"pointer\" }}\r\n        >\r\n          Гарантована продуктивність бджолиної сім'ї\r\n          <span style={{ cursor: \"pointer\", color: \"red\", marginLeft: \"5px\" }}>\r\n            *\r\n          </span>\r\n        </h3>\r\n        <p>Мед: {performance.honey} кг</p>\r\n        {<p>Пилок: {performance.pollenAmount} кг</p>}\r\n        {<p>Прополіс: {performance.propolisAmount} кг</p>}\r\n        {<p>Віск: {performance.waxAmount} кг</p>}\r\n        {<p>Маточне молочко: {performance.royalJellyAmount} кг</p>}\r\n        {<p>Трутневий гомогенат: {performance.droneHomogenateAmount} кг</p>}\r\n        {<p>Бджолина отрута (сирець): {performance.beeVenomAmount} кг</p>}\r\n      </Wrapper>\r\n      <RentInfo\r\n        hiveComponents={hive.hiveComponents}\r\n        power={hive.power}\r\n        totalRent={totalRent.toFixed(2)}\r\n      />\r\n\r\n      <TaskTable\r\n        tasks={hive.tasks}\r\n        onConfirmTask={handleConfirmTask}\r\n        onDeleteTask={handleDeleteTask}\r\n        currentMonth={currentMonth}\r\n        hiveId={hiveId.hiveId}\r\n        onPlannedTasksTotalCostChange={handlePlannedTasksTotalCostChange}\r\n        handleRequiredTasks={handleRequiredTasks}\r\n        useRequiredTasks={useRequiredTasks}\r\n      />\r\n      {!hive.lessee && (\r\n        <>\r\n          <Button\r\n            variant=\"formBtn\" // Вибираємо один з варіантів стилів, наприклад \"formBtn\"\r\n            size=\"large\" // Розмір кнопки, наприклад \"large\"\r\n            onClick={handleOpenContractModal} // Функція для відкриття модалки\r\n          >\r\n            Оформити договір оренди на наступний місяць ($\r\n            {(totalRent + plannedTasksTotalCost).toFixed(2)})\r\n            <br />\r\n            управління бджолосім'єю онлайн, збір доступних продуктів\r\n            бджільництва\r\n          </Button>\r\n          <Button\r\n            variant=\"formBtn\" // Вибираємо один з варіантів стилів, наприклад \"formBtn\"\r\n            size=\"large\" // Розмір кнопки, наприклад \"large\"\r\n            onClick={handleOpenContractModal} // Функція для відкриття модалки\r\n          >\r\n            Оформити договір оренди на повний сезон ($\r\n            {(totalRent * 6 + calculateMandatoryTasksCost()).toFixed(2)})\r\n            <br />\r\n            управління бджолосім'єю онлайн, гарантоване отримання базового\r\n            набору продуктів бджільництва\r\n          </Button>\r\n        </>\r\n      )}\r\n      {/* Модалка для договору */}\r\n      <ContractModal\r\n        isOpen={isContractModalOpen}\r\n        onClose={handleCloseContractModal}\r\n        contractText={contractText}\r\n        onSignContract={handleSignContract}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\n// Хук для блокування прокрутки\r\nexport const useLockBodyScroll = (isLocked) => {\r\n  useEffect(() => {\r\n    if (isLocked) {\r\n      document.body.style.overflow = \"hidden\"; // Блокуємо прокрутку\r\n    } else {\r\n      document.body.style.overflow = \"auto\"; // Відновлюємо прокрутку\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\"; // Відновлюємо при видаленні компонента\r\n    };\r\n  }, [isLocked]);\r\n};\r\n","export const calculatePerformance = (\r\n  hive,\r\n  additionalServices,\r\n  agreeWithBasicTech\r\n) => {\r\n  const { power } = hive; // Сила сім'ї\r\n  const { pollen, propolis, wax, royalJelly, droneHomogenate, beeVenom } =\r\n    additionalServices; // Додаткові послуги\r\n\r\n  // Мед\r\n  let honey = 0;\r\n  if (agreeWithBasicTech) {\r\n    if (power >= 9) honey = 15;\r\n    else if (power === 8) honey = 12;\r\n    else if (power === 7) honey = 11;\r\n    else if (power === 6) honey = 10;\r\n    else if (power === 5) honey = 9;\r\n  }\r\n\r\n  // Пилок\r\n  let pollenAmount = 0;\r\n  if (pollen) {\r\n    if (power >= 9) pollenAmount = 1;\r\n    else if (power === 8) pollenAmount = 0.9;\r\n    else if (power === 7) pollenAmount = 0.8;\r\n    else if (power === 6) pollenAmount = 0.6;\r\n    else if (power === 5) pollenAmount = 0.5;\r\n  }\r\n\r\n  // Прополіс\r\n  let propolisAmount = 0;\r\n  if (propolis) {\r\n    if (power >= 9) propolisAmount = 0.1;\r\n    else if (power === 8) propolisAmount = 0.08;\r\n    else if (power === 7) propolisAmount = 0.07;\r\n    else if (power === 6) propolisAmount = 0.06;\r\n    else if (power === 5) propolisAmount = 0.05;\r\n  }\r\n\r\n  // Віск\r\n  let waxAmount = 0;\r\n  if (wax) {\r\n    if (power >= 9) waxAmount = 0.35;\r\n    else if (power === 8) waxAmount = 0.25;\r\n    else if (power === 7) waxAmount = 0.2;\r\n    else if (power === 6) waxAmount = 0.15;\r\n    else if (power === 5) waxAmount = 0.1;\r\n  }\r\n\r\n  // Маточне молочко\r\n  let royalJellyAmount = 0;\r\n  if (royalJelly) {\r\n    if (power >= 9) royalJellyAmount = 0.1;\r\n    else if (power === 8) royalJellyAmount = 0.08;\r\n    else if (power === 7) royalJellyAmount = 0.05;\r\n    else if (power === 6) royalJellyAmount = 0.03;\r\n    else if (power === 5) royalJellyAmount = 0.02;\r\n  }\r\n\r\n  // Трутневий гомогенат\r\n  let droneHomogenateAmount = 0;\r\n  if (droneHomogenate) {\r\n    if (power >= 9) droneHomogenateAmount = 0.15;\r\n    else if (power === 8) droneHomogenateAmount = 0.1;\r\n    else if (power === 7) droneHomogenateAmount = 0.08;\r\n    else if (power === 6) droneHomogenateAmount = 0.06;\r\n    else if (power === 5) droneHomogenateAmount = 0.05;\r\n  }\r\n\r\n  // Бджолина отрута\r\n  let beeVenomAmount = 0;\r\n  if (beeVenom) {\r\n    if (power >= 9) beeVenomAmount = 0.002;\r\n    else if (power === 8) beeVenomAmount = 0.0015;\r\n    else if (power === 7) beeVenomAmount = 0.001;\r\n    else if (power === 6) beeVenomAmount = 0.0008;\r\n    else if (power === 5) beeVenomAmount = 0.0005;\r\n  }\r\n\r\n  return {\r\n    honey,\r\n    pollenAmount,\r\n    propolisAmount,\r\n    waxAmount,\r\n    royalJellyAmount,\r\n    droneHomogenateAmount,\r\n    beeVenomAmount,\r\n  };\r\n};\r\n","import { beekeepingTasks } from \"../constants/beekeepingTasks\";\r\n\r\nexport const calculateMandatoryTasksCost = () => {\r\n  const data = beekeepingTasks\r\n    .filter((task) => task.priority === \"обов'язкова\")\r\n    .reduce((totalCost, task) => {\r\n      const taskCost = Object.entries(task.frequency).reduce(\r\n        (monthlyCost, [_, frequency]) => {\r\n          const singleTaskCost = task.duration * (task.costPerHour / 60);\r\n          return monthlyCost + singleTaskCost * frequency; // Враховуємо частоту виконання\r\n        },\r\n        0\r\n      );\r\n      return totalCost + taskCost;\r\n    }, 0);\r\n  return data;\r\n};\r\n","import { BeeHiveCard } from \"../components/beeHiveCard/BeeHiveCard\";\r\n\r\nconst HiveCard = () => {\r\n  return <BeeHiveCard />;\r\n};\r\n\r\nexport default HiveCard;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const selectHives = (state) => state.hives.hives;\r\nexport const selectIsLoading = (state) => state.hives.isLoading;\r\nexport const selectError = (state) => state.hives.error;\r\nexport const selectUserProfile = (state) => state.user.profile;\r\nexport const selectIsProfileLoading = (state) => state.user.isLoading;\r\nexport const selectProfileError = (state) => state.user.error;\r\n\r\nexport const selectAllTasks = createSelector(\r\n  [selectHives], // Отримуємо всі вулики з state\r\n  (hives) => {\r\n    return hives.flatMap((hive) => hive.tasks); // Об'єднуємо всі tasks з усіх вуликів\r\n  }\r\n);\r\n\r\nexport const selectTasksUnderReview = createSelector(\r\n  [selectHives], // Отримуємо всі вулики з state\r\n  (hives) => {\r\n    return hives\r\n      .flatMap((hive) => hive.tasks) // Об'єднуємо всі tasks з усіх вуликів\r\n      .filter((task) => task.status === \"Under Review\"); // Фільтруємо по статусу\r\n  }\r\n);\r\n\r\nexport const selectTasksByStatus = createSelector(\r\n  [selectHives, (_, hiveId, status) => ({ hiveId, status })],\r\n  (hives, { hiveId, status }) => {\r\n    const hive = hives.find((hive) => hive.id === hiveId);\r\n    return hive && hive.tasks\r\n      ? hive.tasks.filter((task) => task.status === status)\r\n      : [];\r\n  }\r\n);\r\n\r\nexport const selectHiveById = createSelector(\r\n  [selectHives, (_, hiveId) => hiveId], // Передаємо hiveId\r\n  (hives, hiveId) => {\r\n    return hives.find((hive) => hive.id === hiveId) || null; // Повертаємо вулик або null, якщо не знайдено\r\n  }\r\n);\r\n\r\n// Новий селектор для підсумовування вартості завдань\r\nexport const selectPlannedTasksCost = createSelector(\r\n  [selectHives, selectUserProfile], // Отримуємо вулики та профіль користувача\r\n  (hives, userProfile) => {\r\n    if (!userProfile) return 0;\r\n\r\n    const userId = userProfile.id;\r\n\r\n    // Фільтруємо вулики, які орендує поточний користувач\r\n    const userHives = hives.filter((hive) => hive.lessee === userId);\r\n\r\n    // Збираємо всі завдання зі статусами \"Under Review\" і \"Approved\"\r\n    const plannedTasks = userHives.flatMap((hive) =>\r\n      hive.tasks.filter(\r\n        (task) => task.status === \"Under Review\" || task.status === \"Approved\"\r\n      )\r\n    );\r\n\r\n    // Підсумовуємо їхню вартість\r\n    return plannedTasks.reduce((total, task) => total + task.cost, 0);\r\n  }\r\n);\r\n"],"names":["ButtonStyled","styled","_templateObject","_taggedTemplateLiteral","_ref","variant","css","_templateObject2","_ref2","_templateObject3","_ref3","size","_templateObject4","_ref4","_templateObject5","Button","children","_ref$variant","_ref$size","_ref$type","type","onClick","_jsx","Backdrop","ModalContent","Modal","isOpen","onClose","ReactDOM","e","stopPropagation","document","getElementById","fetchAllHives","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querySnapshot","data","wrap","_context","prev","next","getDocs","collection","db","sent","docs","map","doc","_objectSpread","id","abrupt","stop","apply","arguments","updateHiveTasks","_ref5","_callee3","hiveId","tasks","hiveDocRef","_context3","updateDoc","_x2","addSingleTask","_ref9","_callee5","_ref8","task","_context5","arrayUnion","_x4","deleteHiveTask","_ref11","_callee6","_ref10","_context6","_x5","useHivesQuery","useQuery","queryFn","queryKey","onError","err","console","log","useUpdateHiveTasks","queryClient","useQueryClient","useMutation","onSuccess","variables","invalidateQueries","error","useAddSingleTasks","useDeleteHiveTask","productPrices","honey","pollen","propolis","wax","royalJelly","droneHomogenate","beeVenom","hiveComponentPrices","roof","hiveBody300","hiveBody145","bottomPollenCollector","frame300","frame145","wax300","wax145","PerformanceScale","prices","performance","power","totalValue","calculatePerformance","pollenAmount","propolisAmount","waxAmount","royalJellyAmount","droneHomogenateAmount","beeVenomAmount","toFixed","calculateTotalValue","maxPerformance","calculateMaxPerformance","scaleWidth","Math","min","_jsxs","style","marginTop","fontWeight","marginBottom","width","backgroundColor","height","position","borderRadius","transition","top","left","borderLeft","calculateHiveRent","hiveComponents","Object","entries","reduce","total","_slicedToArray","component","quantity","calculateBeeColonyRent","hivePower","RentInfo","totalRent","Date","toLocaleString","month","cursor","title","concat","CustomTaskForm","customTask","handleCustomTaskChange","handleAddTask","errorMessage","color","name","value","onChange","purpose","description","duration","costPerHour","notes","beekeepingTasks","priority","frequency","березень","квітень","травень","червень","липень","серпень","вересень","жовтень","unifyTask","now","plannedDate","getTime","toISOString","slice","uuidv4","cost","status","executor","date","TaskSelector","dispatch","useDispatch","_useState","useState","_useState2","selectedTask","setSelectedTask","_useState3","mutate","_useState4","setCustomTask","_useState5","_useState6","setErrorMessage","unifiedTask","validateCustomTaskFields","addTaskToHive","newTask","find","t","htmlFor","target","disabled","_defineProperty","TaskFilter","handleFilter","handleRequiredTasks","useRequiredTasks","activeFilter","setActiveFilter","approvedTasks","useSelector","state","selectTasksByStatus","doneTasks","reviewTasks","handleButtonClick","filterName","buttonStyle","executors","avatar","TaskTable","React","onConfirmTask","onDeleteTask","currentMonth","onPlannedTasksTotalCostChange","updateTasks","tempDate","setTempDate","selectedExecutor","setSelectedExecutor","newNotes","setNewNotes","_useState7","_useState8","filteredTasks","setFilteredTasks","handleDateBlur","taskId","property","newValue","preventDefault","getTask","isDateValid","updatedTask","updateTasksStatus","updatedTasks","filter","currentDate","getTotalCost","useCallback","useEffect","_Fragment","length","_executors$find","_executors$find2","newDate","alert","display","flexDirection","gap","alignItems","src","ex","placeholderAvatar","alt","marginLeft","note","onBlur","colSpan","prevProps","nextProps","ContractContent","contractText","onSignContract","ContractModal","ageOfQueen","dateOfBirthd","today","birthDate","ageInMonths","getFullYear","getMonth","getDate","SwiperWrapper","MainSwiperWrapper","ThumbSwiperWrapper","SwiperImage","ThumbImage","ModalImage","_templateObject6","ImageContainer","_templateObject7","Description","_templateObject8","Wrapper","_templateObject9","BeeHiveCard","user","JSON","parse","localStorage","getItem","useParams","hive","selectHiveById","isLoading","selectIsLoading","selectError","deleteTask","thumbsSwiper","setThumbsSwiper","isModalOpen","setIsModalOpen","isContractModalOpen","setIsContractModalOpen","activeImage","setActiveImage","_useState9","_useState10","isDragging","setIsDragging","_useState11","x","y","_useState12","startPosition","setStartPosition","_useState13","_useState14","offset","setOffset","_useState15","_useState16","plannedTasksTotalCost","setPlannedTasksTotalCost","_useState17","_useState18","setUseRequiredTasks","userBalance","selectUserProfile","balance","plannedTasksCost","selectPlannedTasksCost","selectedServices","useMemo","services","additionalServices","agreeWithBasicTech","push","lessee","requiredTasks","isCurrentMonth","includes","isRequiredTask","matchesSelectedServices","Array","isArray","some","generateTasksForMonth","missingTasks","currentTasks","forEach","currentTaskCount","requiredCount","tasksToGenerate","i","generateMissingTasks","newTasks","_toConsumableArray","isLocked","body","overflow","message","hiveConfig","handleMouseUp","handleAdditionalServiceChange","_e$target","checked","updateAdditionalService","service","handleOpenContractModal","handleCloseContractModal","textAlign","Swiper","modules","Navigation","Thumbs","spaceBetween","navigation","thumbs","swiper","destroyed","images","image","index","SwiperSlide","openModal","onSwiper","slidesPerView","watchSlidesProgress","onMouseDown","clientX","clientY","onMouseMove","dx","dy","prevOffset","onMouseUp","onMouseLeave","transform","system","breed","queensBirthday","updateAgreeWithBasicTech","margin","currentTask","remainingBalance","tasksToUpdate","taskToConfirmation","removeTaskFromHive","newTotalCost","prevState","totalCost","monthlyCost","updateHiveProperty","uid","selectHives","hives","profile","selectIsProfileLoading","selectProfileError","selectTasksUnderReview","createSelector","flatMap","_","userProfile","userId"],"sourceRoot":""}