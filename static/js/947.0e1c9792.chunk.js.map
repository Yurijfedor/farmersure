{"version":3,"file":"static/js/947.0e1c9792.chunk.js","mappings":"gNAEaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAASD,EAAAA,EAAAA,QAAO,MAChBE,GAAiBF,EAAAA,EAAAA,QAAO,MAC9BG,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,GAAFF,EAAA,GAAoBA,EAAA,IA+BpCG,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAEThB,EAAekB,QAAQ,CAADH,EAAAE,KAAA,QAC+B,OAAxDE,QAAQC,KAAK,oJAA2CL,EAAAM,OAAA,wBAAAN,EAAAE,KAAA,EAGtCjB,EAAekB,QAAQI,cAAc,KAAD,EAA7C,OAALT,EAAKE,EAAAQ,KAAAR,EAAAE,KAAA,EACLjB,EAAekB,QAAQM,oBAAoBX,GAAO,KAAD,GACrC,QAAdD,EAAAb,EAAOmB,eAAO,IAAAN,OAAA,EAAdA,EAAgBa,cAAeC,UAAUC,MAC3C5B,EAAOmB,QAAQU,KAAKC,KAAKC,UAAU,CAAEjB,MAAAA,KACrCM,QAAQY,IAAI,kHAA8BlB,IAE1CM,QAAQC,KAAK,4JACdL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,SAEDI,QAAQc,MAAM,qIAAgClB,EAAAiB,IAAS,yBAAAjB,EAAAmB,OAAA,GAAAvB,EAAA,mBAE1D,kBAjBc,OAAAJ,EAAA4B,MAAA,KAAAC,UAAA,KAiGf,OA9EAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAwC,WAA7BC,OAAOC,SAASF,SAAwB,MAAQ,KAuEjE,OAtEAvC,EAAOmB,QAAU,IAAIQ,UAAU,GAADe,OAAIH,EAAQ,0BAE1CvC,EAAOmB,QAAQwB,OAAS,WACtBvB,QAAQY,IAAI,iFACZ1B,GAAmB,GApDjBL,EAAekB,SACjBlB,EAAekB,QAAQyB,QAEzB3C,EAAekB,QAAU,IAAI0B,kBAAkB,CAC7CC,WAAY,CAAC,CAAEC,KAAM,mCAGvB9C,EAAekB,QAAQ6B,QAAU,SAACC,GAC5BA,EAAMC,SAAWD,EAAMC,QAAQ,IAAMpD,EAASqB,QAChDrB,EAASqB,QAAQgC,UAAYF,EAAMC,QAAQ,GAE3C9B,QAAQC,KAAK,iOAEjB,EAEApB,EAAekB,QAAQiC,2BAA6B,WAClDhC,QAAQY,IACN,qCACA/B,EAAekB,QAAQkC,oBAEyB,iBAA9CpD,EAAekB,QAAQkC,oBACzBjC,QAAQC,KAAK,+HAEjB,EA+BEd,GACF,EAEAP,EAAOmB,QAAQmC,UAAS,eAAAC,GAAA9C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6C,EAAOP,GAAK,IAAAQ,EAAAC,EAAAC,EAAA,OAAAjD,EAAAA,EAAAA,KAAAK,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAGkB,GAHlB0C,EAAA3C,KAAA,EAE7BwC,EAAU3B,KAAK+B,MAAMZ,EAAMa,MACjC1C,QAAQY,IAAI,uJAAgCyB,GAEvCxD,EAAekB,QAAQ,CAADyC,EAAA1C,KAAA,QAGvB,OAFFE,QAAQC,KACN,2RACAuC,EAAAtC,OAAA,qBAIAmC,EAAQ3C,MAAM,CAAD8C,EAAA1C,KAAA,SACkC,GAAjDE,QAAQY,IAAI,uEAAsByB,EAAQ3C,OACI,WAA1Cb,EAAekB,QAAQ4C,eAA2B,CAAAH,EAAA1C,KAAA,gBAAA0C,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,GAE5CjB,EAAekB,QAAQ6C,qBAC3B,IAAIC,sBAAsBR,EAAQ3C,QAClC,KAAD,UAAA8C,EAAA1C,KAAA,GACoBjB,EAAekB,QAAQ+C,eAAe,KAAD,GAA9C,OAANP,EAAMC,EAAApC,KAAAoC,EAAA1C,KAAA,GACNjB,EAAekB,QAAQM,oBAAoBkC,GAAQ,KAAD,IACtC,QAAdD,EAAA1D,EAAOmB,eAAO,IAAAuC,OAAA,EAAdA,EAAgBhC,cAAeC,UAAUC,MAC3C5B,EAAOmB,QAAQU,KAAKC,KAAKC,UAAU,CAAE4B,OAAAA,KACtCC,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAA3B,GAAA2B,EAAA,SAEDxC,QAAQc,MAAM,yHAA8B0B,EAAA3B,IAAS,QAAA2B,EAAA1C,KAAA,qBAGhDuC,EAAQE,OAAO,CAADC,EAAA1C,KAAA,SAC4B,GAAnDE,QAAQY,IAAI,wEAAuByB,EAAQE,QACG,qBAA1C1D,EAAekB,QAAQ4C,eAAqC,CAAAH,EAAA1C,KAAA,gBAAA0C,EAAA1C,KAAA,GACxDjB,EAAekB,QAAQ6C,qBAC3B,IAAIC,sBAAsBR,EAAQE,SAClC,KAAD,GAAAC,EAAA1C,KAAA,qBAEMuC,EAAQU,aAAa,CAADP,EAAA1C,KAAA,SACkC,GAA/DE,QAAQY,IAAI,8EAA6ByB,EAAQU,eAC7ClE,EAAekB,QAAQiD,kBAAkB,CAADR,EAAA1C,KAAA,gBAAA0C,EAAA1C,KAAA,GACpCjB,EAAekB,QAAQkD,gBAC3B,IAAIC,gBAAgBb,EAAQU,eAC5B,KAAD,GAAAP,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAAW,GAAAX,EAAA,SAILxC,QAAQc,MAAM,4LAAqC0B,EAAAW,IAAS,yBAAAX,EAAAzB,OAAA,GAAAqB,EAAA,0BAE/D,gBAAAgB,GAAA,OAAAjB,EAAAnB,MAAA,KAAAC,UAAA,EA9CuB,GAgDxBrC,EAAOmB,QAAQsD,QAAU,SAACC,GACxBtD,QAAQc,MAAM,+DAAwBwC,EACxC,EAEA1E,EAAOmB,QAAQwD,QAAU,WACvBvD,QAAQY,IAAI,uHACZ1B,GAAmB,GACfL,EAAekB,UACjBlB,EAAekB,QAAQyB,QACvB3C,EAAekB,QAAU,KAE7B,EAEO,WACDnB,EAAOmB,SAASnB,EAAOmB,QAAQyB,QAC/B3C,EAAekB,SAASlB,EAAekB,QAAQyB,OACrD,CACF,GAAG,KAEIgC,EAAAA,EAAAA,KAAA,SAAOC,IAAK/E,EAAUgF,UAAQ,EAACC,aAAW,GACnD,ECnHA,EAlBa,WACX,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,gKACJL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,2dAKHL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,4HACJL,EAAAA,EAAAA,KAAC/E,EAAY,KAEb+E,EAAAA,EAAAA,KAAA,MAAAK,SAAI,0GACJL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,kUAGT,C","sources":["components/streamViewer/StreamViewer.js","pages/Home.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const StreamViewer = () => {\r\n  const videoRef = useRef(null);\r\n  const socket = useRef(null);\r\n  const peerConnection = useRef(null);\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n\r\n  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó WebRTC\r\n  const initializePeerConnection = () => {\r\n    if (peerConnection.current) {\r\n      peerConnection.current.close(); // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑'—î–¥–Ω–∞–Ω–Ω—è, —è–∫—â–æ —î\r\n    }\r\n    peerConnection.current = new RTCPeerConnection({\r\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n    });\r\n\r\n    peerConnection.current.ontrack = (event) => {\r\n      if (event.streams && event.streams[0] && videoRef.current) {\r\n        videoRef.current.srcObject = event.streams[0];\r\n      } else {\r\n        console.warn(\"‚ùó –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ –ø–æ—Ç—ñ–∫ –¥–æ video –µ–ª–µ–º–µ–Ω—Ç—É\");\r\n      }\r\n    };\r\n\r\n    peerConnection.current.oniceconnectionstatechange = () => {\r\n      console.log(\r\n        \"üßä ICE Connection State:\",\r\n        peerConnection.current.iceConnectionState\r\n      );\r\n      if (peerConnection.current.iceConnectionState === \"disconnected\") {\r\n        console.warn(\"‚ö†Ô∏è WebRTC –∑'—î–¥–Ω–∞–Ω–Ω—è —Ä–æ–∑—ñ—Ä–≤–∞–Ω–æ\");\r\n      }\r\n    };\r\n  };\r\n\r\n  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ offer\r\n  const sendOffer = async () => {\r\n    try {\r\n      if (!peerConnection.current) {\r\n        console.warn(\"‚ö†Ô∏è peerConnection —â–µ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π\");\r\n        return;\r\n      }\r\n      const offer = await peerConnection.current.createOffer();\r\n      await peerConnection.current.setLocalDescription(offer);\r\n      if (socket.current?.readyState === WebSocket.OPEN) {\r\n        socket.current.send(JSON.stringify({ offer }));\r\n        console.log(\"üé• –ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–æ–≤–∏–π offer:\", offer);\r\n      } else {\r\n        console.warn(\"‚ö†Ô∏è WebSocket –Ω–µ –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ offer\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ offer:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\r\n    socket.current = new WebSocket(`${protocol}://192.168.0.103:8080`);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log(\"‚úÖ WebSocket –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ\");\r\n      setSocketConnected(true);\r\n      initializePeerConnection(); // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ peerConnection –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ\r\n      sendOffer(); // –ù–∞–¥—Å–∏–ª–∞—î–º–æ offer –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è\r\n    };\r\n\r\n    socket.current.onmessage = async (event) => {\r\n      try {\r\n        const message = JSON.parse(event.data);\r\n        console.log(\"üì© –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:\", message);\r\n\r\n        if (!peerConnection.current) {\r\n          console.warn(\r\n            \"‚ö†Ô∏è peerConnection —â–µ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (message.offer) {\r\n          console.log(\"üé• –û—Ç—Ä–∏–º–∞–Ω–æ offer:\", message.offer);\r\n          if (peerConnection.current.signalingState === \"stable\") {\r\n            try {\r\n              await peerConnection.current.setRemoteDescription(\r\n                new RTCSessionDescription(message.offer)\r\n              );\r\n              const answer = await peerConnection.current.createAnswer();\r\n              await peerConnection.current.setLocalDescription(answer);\r\n              if (socket.current?.readyState === WebSocket.OPEN) {\r\n                socket.current.send(JSON.stringify({ answer }));\r\n              }\r\n            } catch (error) {\r\n              console.error(\"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ offer:\", error);\r\n            }\r\n          }\r\n        } else if (message.answer) {\r\n          console.log(\"üé• –û—Ç—Ä–∏–º–∞–Ω–æ answer:\", message.answer);\r\n          if (peerConnection.current.signalingState === \"have-local-offer\") {\r\n            await peerConnection.current.setRemoteDescription(\r\n              new RTCSessionDescription(message.answer)\r\n            );\r\n          }\r\n        } else if (message.iceCandidate) {\r\n          console.log(\"üßä –û—Ç—Ä–∏–º–∞–Ω–æ iceCandidate:\", message.iceCandidate);\r\n          if (peerConnection.current.remoteDescription) {\r\n            await peerConnection.current.addIceCandidate(\r\n              new RTCIceCandidate(message.iceCandidate)\r\n            );\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\", error);\r\n      }\r\n    };\r\n\r\n    socket.current.onerror = (err) => {\r\n      console.error(\"‚ùå –ü–æ–º–∏–ª–∫–∞ WebSocket:\", err);\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.log(\"‚ö†Ô∏è WebSocket –∑'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ\");\r\n      setSocketConnected(false);\r\n      if (peerConnection.current) {\r\n        peerConnection.current.close();\r\n        peerConnection.current = null;\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      if (socket.current) socket.current.close();\r\n      if (peerConnection.current) peerConnection.current.close();\r\n    };\r\n  }, []);\r\n\r\n  return <video ref={videoRef} autoPlay playsInline />;\r\n};\r\n","import { StreamViewer } from \"../components/streamViewer/StreamViewer\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É!</h1>\r\n      <p>\r\n        –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –≤—ñ–¥–µ–æ –∑ –≤—É–ª–∏–∫–∞ —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é\r\n        –ø—Ä–æ –±–¥–∂—ñ–ª—å–Ω–∏—Ü—Ç–≤–æ.\r\n      </p>\r\n\r\n      <h2>üìπ –ü—Ä—è–º–∏–π –µ—Ñ—ñ—Ä –∑ –≤—É–ª–∏–∫–∞</h2>\r\n      <StreamViewer />\r\n\r\n      <h2>üêù –©–æ –º–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ?</h2>\r\n      <p>–û—Ä–µ–Ω–¥–∞ –≤—É–ª–∏–∫—ñ–≤, –ø—Ä–æ–¥–∞–∂ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó —Ç–∞ –Ω–∞–≤—á–∞–Ω–Ω—è –¥–ª—è –ø–∞—Å—ñ—á–Ω–∏–∫—ñ–≤.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["StreamViewer","videoRef","useRef","socket","peerConnection","_useState","useState","_useState2","_slicedToArray","setSocketConnected","sendOffer","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_socket$current","offer","wrap","_context","prev","next","current","console","warn","abrupt","createOffer","sent","setLocalDescription","readyState","WebSocket","OPEN","send","JSON","stringify","log","t0","error","stop","apply","arguments","useEffect","protocol","window","location","concat","onopen","close","RTCPeerConnection","iceServers","urls","ontrack","event","streams","srcObject","oniceconnectionstatechange","iceConnectionState","onmessage","_ref2","_callee2","message","_socket$current2","answer","_context2","parse","data","signalingState","setRemoteDescription","RTCSessionDescription","createAnswer","iceCandidate","remoteDescription","addIceCandidate","RTCIceCandidate","t1","_x","onerror","err","onclose","_jsx","ref","autoPlay","playsInline","_jsxs","children"],"sourceRoot":""}