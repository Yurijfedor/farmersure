{"version":3,"file":"static/js/592.5421d9a1.chunk.js","mappings":"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","sources":["components/loginForm/LoginForm.styled.js","hooks/useUserProfile.js","components/loginForm/LogInForm.jsx","pages/LogIn.jsx","services/auth.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@tanstack/react-query/src/useSyncExternalStore.ts","../node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormStyled = styled.form`\r\n  display: grid;\r\n  gap: 10px;\r\n  margin-top: 50px;\r\n  @media (min-width: 768px) {\r\n    width: 300px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\n  padding-left: 15px;\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: white;\r\n  background-color: #29d1c3;\r\n  &:hover {\r\n    background-color: #0000ff;\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.div`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n  position: relative;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    width: 45%;\r\n    height: 1px;\r\n    background: #ccc;\r\n    position: absolute;\r\n    top: 50%;\r\n  }\r\n  &:before {\r\n    left: 0;\r\n  }\r\n  &:after {\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nexport const GoogleButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: white;\r\n  background-color: #29d1c3;\r\n  &:hover {\r\n    background-color: #0000ff;\r\n  }\r\n  img {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { doc, setDoc, getDoc, updateDoc } from \"firebase/firestore\";\r\n\r\nimport {\r\n  saveUserProfile,\r\n  getUserProfile,\r\n  updateUserProfile,\r\n} from \"../services/user\";\r\nimport { setUserProfile } from \"../redux/userSlice\";\r\n\r\nimport db from \"../firebase\"; // Імпортуйте ваш екземпляр Firestore\r\n\r\n// import { getAuth } from \"firebase/auth\";\r\n\r\nexport const useUserProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userId = user?.uid;\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      getUserProfile(userId)\r\n        .then((data) => {\r\n          setProfile(data); // Завантажуємо профіль з Firestore\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setError(err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  const updateProfile = async (userData) => {\r\n    if (userId) {\r\n      try {\r\n        await updateUserProfile(userId, userData); // Зберігаємо/оновлюємо профіль в Firestore\r\n        setProfile(userData);\r\n        dispatch(setUserProfile(userData));\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    profile,\r\n    loading,\r\n    error,\r\n    updateProfile,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\n\r\nimport { setUserProfile } from \"../../redux/userSlice\";\r\nimport { fetchUserProfile } from \"../../redux/operations\";\r\nimport { logInWithEmail, logInWithGoogle } from \"../../services/auth\";\r\nimport { useUserProfile } from \"../../hooks/useUserProfile\";\r\nimport googlePng from \"../../images/icons8-google-48.png\";\r\n\r\nimport {\r\n  FormStyled,\r\n  InputStyled,\r\n  ButtonSubmit,\r\n  GoogleButton,\r\n  Divider,\r\n} from \"./LoginForm.styled\";\r\n\r\nexport const LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { profile, loading, error, updateProfile } = useUserProfile();\r\n  const toPath = JSON.parse(localStorage.getItem(\"toRedirect\"));\r\n\r\n  const { mutate: loginWithEmail } = useMutation(logInWithEmail, {\r\n    onSuccess: (user) => {\r\n      navigate(toPath);\r\n      dispatch(fetchUserProfile(user.uid));\r\n      localStorage.removeItem(\"toRedirect\");\r\n    },\r\n    onError: (error) => {\r\n      alert(error.message);\r\n    },\r\n  });\r\n\r\n  const { mutate: loginWithGoogle } = useMutation(logInWithGoogle, {\r\n    onSuccess: (user) => {\r\n      navigate(toPath);\r\n      dispatch(fetchUserProfile(user.uid));\r\n      localStorage.removeItem(\"toRedirect\");\r\n    },\r\n    onError: (error) => {\r\n      alert(error.message);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    loginWithEmail({ email, password });\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    loginWithGoogle();\r\n  };\r\n\r\n  return (\r\n    <FormStyled onSubmit={handleSubmit}>\r\n      <InputStyled\r\n        placeholder=\"e-mail\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <InputStyled\r\n        placeholder=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <ButtonSubmit type=\"submit\">Log In</ButtonSubmit>\r\n\r\n      <Divider>or</Divider>\r\n\r\n      <GoogleButton onClick={handleGoogleLogin}>\r\n        <img src={googlePng} alt=\"Google Icon\" /> Sign in with Google\r\n      </GoogleButton>\r\n    </FormStyled>\r\n  );\r\n};\r\n","import { LoginForm } from \"../components/loginForm/LogInForm\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <title>Login</title>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n// import { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n// import db from \"../firebase\"; // Імпортуйте ваш екземпляр Firestore\r\n\r\nimport { saveUserProfile, syncUserProfile } from \"./user\";\r\nconst auth = getAuth();\r\n\r\n/**\r\n * Реєстрація нового користувача\r\n */\r\nexport const register = async (userData) => {\r\n  try {\r\n    const { email, password, name } = userData;\r\n    const { user } = await createUserWithEmailAndPassword(\r\n      auth,\r\n      email,\r\n      password\r\n    );\r\n\r\n    // Збереження профілю у Firestore\r\n    await saveUserProfile(user.uid, {\r\n      name: name || \"Ім'я Користувача\",\r\n      email: user.email,\r\n      phone: \"\",\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({ uid: user.uid, email: user.email })\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Помилка реєстрації:\", error.message);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Вхід через email і пароль\r\n */\r\nexport const logInWithEmail = async (userData) => {\r\n  try {\r\n    const { email, password } = userData;\r\n    const { user } = await signInWithEmailAndPassword(auth, email, password);\r\n\r\n    const userProfile = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n    };\r\n\r\n    await syncUserProfile(user);\r\n    await saveUserProfile(user.uid, userProfile);\r\n\r\n    // Збереження профілю в localStorage\r\n    localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n\r\n    return userProfile; // Повертаємо профіль користувача\r\n  } catch (error) {\r\n    console.error(\"Помилка входу:\", error.message);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Вхід через Google\r\n */\r\nexport const logInWithGoogle = async () => {\r\n  try {\r\n    const provider = new GoogleAuthProvider();\r\n    const { user } = await signInWithPopup(auth, provider);\r\n\r\n    const userProfile = {\r\n      uid: user.uid,\r\n      name: user.displayName,\r\n      email: user.email,\r\n      photoURL: user.photoURL, // URL фото профілю з Google\r\n    };\r\n\r\n    await syncUserProfile(user);\r\n    await saveUserProfile(user.uid, userProfile);\r\n\r\n    // Збереження профілю в localStorage\r\n    localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n\r\n    return userProfile; // Повертаємо профіль користувача\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Вихід з системи\r\n */\r\nexport const logOut = async () => {\r\n  try {\r\n    await signOut(auth);\r\n    localStorage.removeItem(\"user\");\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Помилка виходу:\", error.message);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n","import type { Action, Mutation } from './mutation'\nimport { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport type { QueryClient } from './queryClient'\nimport { Subscribable } from './subscribable'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverResult,\n  MutationObserverOptions,\n} from './types'\nimport { shallowEqualObjects } from './utils'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.length) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport {\n  notifyManager,\n  parseMutationArgs,\n  MutationObserver,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport { shouldThrowError } from './utils'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n","'use client'\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n","export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n"],"names":["FormStyled","styled","_templateObject","_taggedTemplateLiteral","InputStyled","_templateObject2","ButtonSubmit","_templateObject3","Divider","_templateObject4","GoogleButton","_templateObject5","useUserProfile","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","profile","setProfile","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","user","JSON","parse","localStorage","getItem","userId","uid","useEffect","getUserProfile","then","data","catch","err","message","updateProfile","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","wrap","_context","prev","next","updateUserProfile","setUserProfile","t0","stop","_x","apply","arguments","LoginForm","email","setEmail","password","setPassword","navigate","useNavigate","_useUserProfile","toPath","_useMutation","useMutation","logInWithEmail","onSuccess","fetchUserProfile","removeItem","onError","alert","loginWithEmail","mutate","_useMutation2","logInWithGoogle","loginWithGoogle","_jsxs","onSubmit","e","preventDefault","children","_jsx","placeholder","name","type","value","onChange","target","onClick","src","googlePng","alt","auth","getAuth","register","_yield$createUserWith","createUserWithEmailAndPassword","sent","saveUserProfile","phone","setItem","stringify","abrupt","console","Error","_ref2","_callee2","_yield$signInWithEmai","userProfile","_context2","signInWithEmailAndPassword","syncUserProfile","_x2","_ref3","_callee3","provider","_yield$signInWithPopu","_context3","GoogleAuthProvider","signInWithPopup","displayName","photoURL","log","logOut","_ref4","_callee4","_context4","signOut","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","key","this","bind","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","_this$currentMutation2","listeners","length","removeObserver","action","notifyOptions","currentResult","undefined","variables","mutateOptions","build","_objectSpread","addObserver","execute","state","getDefaultState","result","isLoading","status","isSuccess","isError","isIdle","_this2","notifyManager","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","hasListeners","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","forEach","listener","Subscribable","arg1","arg2","arg3","_React$useState","React","queryClient","useSyncExternalStore","onStoreChange","subscribe","getCurrentResult","shouldThrowError","useErrorBoundary","noop","useSyncExternalStore$1","_useErrorBoundary","params","_toConsumableArray"],"sourceRoot":""}