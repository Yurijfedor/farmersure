{"version":3,"file":"static/js/117.2992042a.chunk.js","mappings":"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","sources":["hooks/useUserProfile.js","components/dashboard/ProfileSection.jsx","components/dashboard/BalanceSection.jsx","components/dashboard/RentedHivesSection.styled.js","components/dashboard/RentedHivesSection.jsx","pages/ClientDashboard.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { doc, setDoc, getDoc, updateDoc } from \"firebase/firestore\";\r\n\r\nimport {\r\n  saveUserProfile,\r\n  getUserProfile,\r\n  updateUserProfile,\r\n} from \"../services/user\";\r\nimport { setUserProfile } from \"../redux/userSlice\";\r\n\r\nimport db from \"../firebase\"; // Імпортуйте ваш екземпляр Firestore\r\n\r\n// import { getAuth } from \"firebase/auth\";\r\n\r\nexport const useUserProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userId = user?.uid;\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      getUserProfile(userId)\r\n        .then((data) => {\r\n          setProfile(data); // Завантажуємо профіль з Firestore\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setError(err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  const updateProfile = async (userData) => {\r\n    if (userId) {\r\n      try {\r\n        await updateUserProfile(userId, userData); // Зберігаємо/оновлюємо профіль в Firestore\r\n        setProfile(userData);\r\n        dispatch(setUserProfile(userData));\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    profile,\r\n    loading,\r\n    error,\r\n    updateProfile,\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useUserProfile } from \"../../hooks/useUserProfile\";\r\nimport { uploadProfilePicture } from \"../../services/user\";\r\nimport {\r\n  selectUserProfile,\r\n  selectIsProfileLoading,\r\n  selectProfileError,\r\n} from \"../../redux/selectors\";\r\n\r\nimport { Button } from \"../button/Button\";\r\n\r\nexport const ProfileSection = () => {\r\n  const profile = useSelector(selectUserProfile);\r\n  const loading = useSelector(selectIsProfileLoading);\r\n  const error = useSelector(selectProfileError);\r\n  const { updateProfile } = useUserProfile();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editableProfile, setEditableProfile] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // Синхронізація editableProfile з profile\r\n  useEffect(() => {\r\n    if (profile) {\r\n      setEditableProfile(profile);\r\n    }\r\n  }, [profile]);\r\n\r\n  // Обробник для завантаження зображення\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n    }\r\n  };\r\n\r\n  // Завантаження зображення в Firebase Storage\r\n  const handleImageUpload = async () => {\r\n    if (!image) return;\r\n    setUploading(true);\r\n    try {\r\n      const imageUrl = await uploadProfilePicture(image, profile.id); // profile.id як унікальний ідентифікатор\r\n      setEditableProfile((prev) => ({ ...prev, customPhotoURL: imageUrl }));\r\n      setImage(null);\r\n      setUploading(false);\r\n      updateProfile(editableProfile);\r\n    } catch (err) {\r\n      console.error(\"Помилка завантаження фото:\", err);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateProfile(editableProfile);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Завантаження...</p>\r\n      ) : error ? (\r\n        <p>Помилка: {error}</p>\r\n      ) : (\r\n        editableProfile && (\r\n          <div>\r\n            <h2>Особиста інформація</h2>\r\n            <div>\r\n              <img\r\n                src={\r\n                  editableProfile.customPhotoURL ||\r\n                  editableProfile.photoURL ||\r\n                  \"https://via.placeholder.com/150\"\r\n                }\r\n                alt=\"Profile\"\r\n                style={{ width: 150, height: 150, borderRadius: \"50%\" }}\r\n              />\r\n              {isEditing && (\r\n                <div>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageChange}\r\n                  />\r\n                  <Button\r\n                    size=\"small\"\r\n                    onClick={handleImageUpload}\r\n                    disabled={!image || uploading}\r\n                  >\r\n                    {uploading ? \"Завантаження...\" : \"Завантажити фото\"}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {isEditing ? (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"name\"\r\n                  value={editableProfile.name}\r\n                  onChange={(e) =>\r\n                    setEditableProfile((prev) => ({\r\n                      ...prev,\r\n                      name: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"email\"\r\n                  value={editableProfile.email}\r\n                  onChange={(e) =>\r\n                    setEditableProfile((prev) => ({\r\n                      ...prev,\r\n                      email: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  placeholder=\"phone\"\r\n                  value={editableProfile.phone}\r\n                  onChange={(e) =>\r\n                    setEditableProfile((prev) => ({\r\n                      ...prev,\r\n                      phone: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n                <Button size=\"small\" onClick={handleSave}>\r\n                  Зберегти\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <p>Ім'я: {editableProfile.name}</p>\r\n                <p>Електронна пошта: {editableProfile.email}</p>\r\n                <p>Телефон: {editableProfile.phone}</p>\r\n                <Button size=\"small\" onClick={() => setIsEditing(true)}>\r\n                  Редагувати\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { selectUserProfile } from \"../../redux/selectors\";\r\nimport { updateProfile } from \"../../redux/operations\"; // Операція для оновлення профілю\r\nimport { Modal } from \"../modal/Modal\";\r\nimport { Button } from \"../button/Button\";\r\n\r\nexport const BalanceSection = () => {\r\n  const dispatch = useDispatch();\r\n  const userProfile = useSelector(selectUserProfile);\r\n\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const handleAddBalance = () => {\r\n    const newBalance = parseFloat(\r\n      (Number(userProfile.balance) + Number(amount)).toFixed(2)\r\n    );\r\n\r\n    // Оновлення балансу через Redux-операцію\r\n    dispatch(\r\n      updateProfile({\r\n        uid: userProfile.id,\r\n        data: { balance: newBalance }, // Передаємо дані в потрібному форматі\r\n      })\r\n    );\r\n    // Закриття модального вікна та очищення введеного значення\r\n    setModalOpen(false);\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Баланс</h2>\r\n      <p>Ваш баланс: {userProfile?.balance || 0} грн</p>\r\n      <Button size=\"small\" onClick={() => setModalOpen(true)}>\r\n        Поповнити баланс\r\n      </Button>\r\n\r\n      {/* Використання Modal для модального вікна */}\r\n      <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>\r\n        <h3>Поповнити баланс</h3>\r\n        <input\r\n          style={{ marginTop: \"10px\" }}\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          placeholder=\"Введіть суму\"\r\n        />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"5px\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"formBtn\"\r\n            size=\"small\"\r\n            onClick={handleAddBalance}\r\n            disabled={!amount || amount <= 0}\r\n          >\r\n            Поповнити\r\n          </Button>\r\n          <Button\r\n            variant=\"formBtn\"\r\n            size=\"small\"\r\n            onClick={() => setModalOpen(false)}\r\n          >\r\n            Скасувати\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n  font-family: Arial, sans-serif;\r\n`;\r\n\r\nexport const TableHeader = styled.th`\r\n  background-color: #f4f4f4;\r\n  font-weight: bold;\r\n  border: 2px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const TableCell = styled.td`\r\n  border: 2px solid #ddd;\r\n  padding: 10px;\r\n  text-align: center;\r\n\r\n  img {\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    width: 50px;\r\n    height: 50px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const TableRow = styled.tr`\r\n  &:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  selectHivesByLessee,\r\n  selectPlannedTasksCost,\r\n  selectUserProfile,\r\n} from \"../../redux/selectors\";\r\nimport { updateHiveProperty, updateProfile } from \"../../redux/operations\";\r\nimport { updateHive } from \"../../redux/hivesSlice\";\r\n\r\nimport { PerformanceScale } from \"../performanceScale/PerformanceScale\";\r\nimport { Button } from \"../button/Button\";\r\nimport { Modal } from \"../modal/Modal\";\r\nimport { ContractModal } from \"../сontractModal/ContractModal\";\r\nimport { calculateTotalRent } from \"../../helpers/calculateRent\";\r\nimport { calculateMandatoryTasksCostForNextPeriod } from \"../../helpers/calculateMandatoryTasksCost\";\r\nimport { useCancelBeehiveRental } from \"../../hooks/useHives\";\r\n\r\nimport {\r\n  Table,\r\n  TableCell,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"./RentedHivesSection.styled\";\r\n\r\nexport const RentedHivesSection = () => {\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [selectedHive, setSelectedHive] = useState(null);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const hives = useSelector((state) => selectHivesByLessee(state, user.uid));\r\n  const userProfile = useSelector(selectUserProfile);\r\n  const plannedTaskTotalCost = useSelector(selectPlannedTasksCost);\r\n  const { mutate: cancelRental } = useCancelBeehiveRental();\r\n\r\n  const openModal = (hive, type) => {\r\n    setSelectedHive(hive);\r\n    setModalType(type);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedHive(null);\r\n    setModalType(null);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleExtendContract = () => {\r\n    try {\r\n      const currentEndDate = new Date(selectedHive.lessee.endDate);\r\n      const today = new Date();\r\n      const monthsLeft = 8 - today.getMonth(); // Кількість місяців до кінця серпня\r\n      // Отримуємо останній день наступного місяця\r\n      const nextMonth = new Date(currentEndDate);\r\n      nextMonth.setMonth(nextMonth.getMonth() + 1);\r\n      const lastDayOfNextMonth = new Date(\r\n        Date.UTC(nextMonth.getFullYear(), nextMonth.getMonth() + 1, 0)\r\n      );\r\n      const newEndDate =\r\n        modalType === \"extendMonthly\"\r\n          ? lastDayOfNextMonth.toISOString().split(\"T\")[0]\r\n          : new Date(Date.UTC(today.getFullYear(), 7, 31))\r\n              .toISOString()\r\n              .split(\"T\")[0];\r\n      const totalRent = calculateTotalRent(\r\n        selectedHive.hiveComponents,\r\n        selectedHive.power\r\n      );\r\n      const monthsToExtend = monthsLeft - currentEndDate.getMonth();\r\n\r\n      const extensionCost =\r\n        modalType === \"extendMonthly\"\r\n          ? totalRent\r\n          : totalRent * monthsToExtend +\r\n            calculateMandatoryTasksCostForNextPeriod(modalType) +\r\n            plannedTaskTotalCost;\r\n\r\n      // Перевірка балансу\r\n      if (userProfile.balance < extensionCost) {\r\n        const deficit = extensionCost - userProfile.balance;\r\n        alert(\r\n          `Недостатньо коштів! Поповніть баланс на ${deficit.toFixed(2)} грн.`\r\n        );\r\n        return;\r\n      }\r\n\r\n      const newBalance = parseFloat(\r\n        (\r\n          userProfile.balance -\r\n          (modalType === \"extendMonthly\"\r\n            ? totalRent\r\n            : totalRent * monthsToExtend)\r\n        ).toFixed(2)\r\n      );\r\n\r\n      // Оновлення Firestore\r\n      dispatch(\r\n        updateHiveProperty({\r\n          hiveId: selectedHive.id,\r\n          property: \"lessee\",\r\n          value: {\r\n            ...selectedHive.lessee,\r\n            endDate: newEndDate,\r\n          },\r\n        })\r\n      );\r\n\r\n      // Оновлення локального стейту\r\n      dispatch(\r\n        updateHive({\r\n          id: selectedHive.id,\r\n          updates: {\r\n            lessee: {\r\n              ...selectedHive.lessee,\r\n              endDate: newEndDate,\r\n            },\r\n          },\r\n        })\r\n      );\r\n\r\n      // Оновлення балансу через Redux-операцію\r\n      dispatch(\r\n        updateProfile({\r\n          uid: userProfile.id,\r\n          data: { balance: newBalance }, // Передаємо дані в потрібному форматі\r\n        })\r\n      );\r\n\r\n      alert(`Оренду продовжено до ${newEndDate}`);\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error(\"Помилка продовження оренди:\", error);\r\n    }\r\n  };\r\n\r\n  const handleCancelContract = () => {\r\n    try {\r\n      const today = new Date();\r\n      const endDate = new Date(selectedHive.lessee.endDate);\r\n\r\n      // Розрахунок компенсації за невикористаний період\r\n      const remainingMonths =\r\n        (endDate.getFullYear() - today.getFullYear()) * 12 +\r\n        (endDate.getMonth() - today.getMonth());\r\n      console.log(remainingMonths);\r\n      const rentalStartDate = new Date(selectedHive.lessee.startDate); // Дата початку оренди\r\n      const timeSinceStart = today - rentalStartDate; // Різниця в мілісекундах\r\n      const isImmediateCancellation = timeSinceStart < 24 * 60 * 60 * 1000; // Менше доби\r\n\r\n      const monthsToRefund =\r\n        isImmediateCancellation && remainingMonths >= 0\r\n          ? remainingMonths + 1 // Якщо скасування одразу, повертаємо ще один місяць\r\n          : remainingMonths > 0\r\n          ? remainingMonths\r\n          : 0;\r\n      console.log(monthsToRefund);\r\n\r\n      const refundAmount =\r\n        monthsToRefund > 0\r\n          ? calculateTotalRent(\r\n              selectedHive.hiveComponents,\r\n              selectedHive.power\r\n            ) * monthsToRefund\r\n          : 0;\r\n\r\n      // Оновлення балансу користувача\r\n      const newBalance = parseFloat(\r\n        (Number(userProfile.balance) + refundAmount).toFixed(2)\r\n      );\r\n\r\n      cancelRental(selectedHive.id);\r\n\r\n      // Оновлення балансу користувача\r\n      dispatch(\r\n        updateProfile({\r\n          uid: userProfile.id,\r\n          data: { balance: newBalance },\r\n        })\r\n      );\r\n\r\n      alert(`Оренду скасовано. Вам повернуто ${refundAmount.toFixed(2)} грн.`);\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error(\"Помилка скасування оренди:\", error);\r\n    }\r\n  };\r\n\r\n  const today = new Date();\r\n  const nextMonthLastDay = new Date(\r\n    today.getFullYear(),\r\n    today.getMonth() + 2,\r\n    0\r\n  ) // Останній день наступного місяця\r\n    .toISOString()\r\n    .split(\"T\")[0]; // Приводимо до формату YYYY-MM-DD\r\n\r\n  return (\r\n    <div className=\"rented-hives-section\">\r\n      <h2>Орендовані вулики</h2>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <TableHeader>№</TableHeader>\r\n            <TableHeader>Фото</TableHeader>\r\n            <TableHeader>Сила</TableHeader>\r\n            <TableHeader>Продуктивність</TableHeader>\r\n            <TableHeader>Тип оренди</TableHeader>\r\n            <TableHeader>Дата закінчення оренди</TableHeader>\r\n            <TableHeader>Дії</TableHeader>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {hives.map((hive, index) => (\r\n            <TableRow key={hive.id}>\r\n              <TableCell>{index + 1}</TableCell>\r\n              <TableCell>\r\n                <img src={hive.photoURL} alt={`Вулик ${hive.number}`} />\r\n              </TableCell>\r\n              <TableCell>{`${hive.power} рамок`}</TableCell>\r\n              <TableCell>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    gap: \"10px\",\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  <PerformanceScale hive={hive} product={\"honey\"} />\r\n                  <PerformanceScale hive={hive} product={\"pollen\"} />\r\n                  <PerformanceScale hive={hive} product={\"propolis\"} />\r\n                  <PerformanceScale hive={hive} product={\"royalJelly\"} />\r\n                  <PerformanceScale hive={hive} product={\"droneHomogenate\"} />\r\n                  <PerformanceScale hive={hive} product={\"wax\"} />\r\n                  <PerformanceScale hive={hive} product={\"beeVenom\"} />\r\n                </div>\r\n              </TableCell>\r\n              <TableCell>\r\n                {hive.lessee.type === \"monthly\"\r\n                  ? \"помісячна\"\r\n                  : hive.lessee.type === \"seasonal\"\r\n                  ? \"до кінця сезону\"\r\n                  : \"не встановлено\"}\r\n              </TableCell>\r\n              <TableCell>{hive.lessee.endDate}</TableCell>\r\n              <TableCell>\r\n                {hive.lessee.endDate < nextMonthLastDay && (\r\n                  <Button\r\n                    variant=\"formBtn\"\r\n                    size=\"medium\"\r\n                    onClick={() => openModal(hive, \"extendMonthly\")}\r\n                  >\r\n                    Продовжити на місяць\r\n                  </Button>\r\n                )}\r\n                {hive.lessee.endDate !== \"2025-08-31\" && (\r\n                  <Button\r\n                    variant=\"formBtn\"\r\n                    size=\"medium\"\r\n                    onClick={() => openModal(hive, \"extendSeason\")}\r\n                  >\r\n                    Продовжити до кінця сезону\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  variant=\"formBtn\"\r\n                  size=\"medium\"\r\n                  onClick={() => openModal(hive, \"videoReview\")}\r\n                >\r\n                  Замовити онлайн-відеоогляд\r\n                </Button>\r\n                <Button\r\n                  variant=\"formBtn\"\r\n                  size=\"medium\"\r\n                  onClick={() => openModal(hive, \"cancelContract\")}\r\n                >\r\n                  скасувати договір оренди\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {modalType && (\r\n        <ContractModal\r\n          isOpen={isModalOpen}\r\n          onClose={closeModal}\r\n          onSignContract={\r\n            modalType === \"cancelContract\"\r\n              ? handleCancelContract\r\n              : handleExtendContract\r\n          }\r\n          contractType={modalType}\r\n          hive={selectedHive}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ProfileSection } from \"../components/dashboard/ProfileSection\";\r\nimport { BalanceSection } from \"../components/dashboard/BalanceSection\";\r\nimport { RentedHivesSection } from \"../components/dashboard/RentedHivesSection\";\r\n// import TasksSection from \"../components/TasksSection\";\r\n\r\nconst ClientDashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Кабінет клієнта</h1>\r\n      <ProfileSection />\r\n      <BalanceSection />\r\n      <RentedHivesSection />\r\n      {/* <TasksSection /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientDashboard;\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["useUserProfile","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","profile","setProfile","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","user","JSON","parse","localStorage","getItem","userId","uid","useEffect","getUserProfile","then","data","catch","err","message","updateProfile","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","wrap","_context","prev","next","updateUserProfile","setUserProfile","t0","stop","_x","apply","arguments","ProfileSection","useSelector","selectUserProfile","selectIsProfileLoading","selectProfileError","isEditing","setIsEditing","editableProfile","setEditableProfile","image","setImage","_useState7","_useState8","uploading","setUploading","handleImageUpload","imageUrl","abrupt","uploadProfilePicture","id","sent","_objectSpread","customPhotoURL","console","_jsx","children","_jsxs","src","photoURL","alt","style","width","height","borderRadius","type","accept","onChange","e","file","target","files","Button","size","onClick","disabled","name","placeholder","value","email","phone","BalanceSection","userProfile","isModalOpen","setModalOpen","amount","setAmount","balance","Modal","isOpen","onClose","marginTop","display","flexDirection","gap","variant","newBalance","parseFloat","Number","toFixed","Table","styled","_templateObject","_taggedTemplateLiteral","TableHeader","_templateObject2","TableCell","_templateObject3","TableRow","_templateObject4","RentedHivesSection","selectedHive","setSelectedHive","modalType","setModalType","setIsModalOpen","hives","state","selectHivesByLessee","plannedTaskTotalCost","selectPlannedTasksCost","cancelRental","useCancelBeehiveRental","mutate","openModal","hive","closeModal","today","Date","nextMonthLastDay","getFullYear","getMonth","toISOString","split","className","map","index","concat","number","power","flexWrap","PerformanceScale","product","lessee","endDate","ContractModal","onSignContract","remainingMonths","log","monthsToRefund","startDate","refundAmount","calculateTotalRent","hiveComponents","alert","currentEndDate","monthsLeft","nextMonth","setMonth","lastDayOfNextMonth","UTC","newEndDate","totalRent","monthsToExtend","extensionCost","calculateMandatoryTasksCostForNextPeriod","deficit","updateHiveProperty","hiveId","property","updateHive","updates","contractType","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector"],"sourceRoot":""}