{"version":3,"file":"static/js/821.fa90bf15.chunk.js","mappings":"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","sources":["components/loginForm/LoginForm.styled.js","components/registerForm/RegisterForm.jsx","pages/Register.jsx","services/auth.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts","../node_modules/@tanstack/react-query/src/useSyncExternalStore.ts","../node_modules/@tanstack/react-query/src/utils.ts"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormStyled = styled.form`\r\n  display: grid;\r\n  gap: 10px;\r\n  margin-top: 50px;\r\n  @media (min-width: 768px) {\r\n    width: 300px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\n  padding-left: 15px;\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: white;\r\n  background-color: #29d1c3;\r\n  &:hover {\r\n    background-color: #0000ff;\r\n  }\r\n`;\r\n\r\nexport const Divider = styled.div`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n  position: relative;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    width: 45%;\r\n    height: 1px;\r\n    background: #ccc;\r\n    position: absolute;\r\n    top: 50%;\r\n  }\r\n  &:before {\r\n    left: 0;\r\n  }\r\n  &:after {\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nexport const GoogleButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: white;\r\n  background-color: #29d1c3;\r\n  &:hover {\r\n    background-color: #0000ff;\r\n  }\r\n  img {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\n\r\nimport { register } from \"../../services/auth\";\r\n\r\nimport {\r\n  FormStyled,\r\n  InputStyled,\r\n  ButtonSubmit,\r\n} from \"../loginForm/LoginForm.styled\";\r\n\r\nexport const RegisterForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { mutate: registerMutation } = useMutation(register, {\r\n    onSuccess: () => {\r\n      navigate(\"/home\");\r\n    },\r\n    onError: (error) => {\r\n      alert(error.message);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      registerMutation({ email, password, name });\r\n      navigate(\"/register\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    } catch (error) {\r\n      alert(\"Invalid user!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormStyled onSubmit={handleSubmit}>\r\n      <InputStyled\r\n        placeholder=\"name\"\r\n        name=\"name\"\r\n        value={name}\r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <InputStyled\r\n        placeholder=\"e-mail\"\r\n        name=\"email\"\r\n        value={email}\r\n        type=\"email\"\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <InputStyled\r\n        placeholder=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        type=\"password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <ButtonSubmit type=\"submit\">Register</ButtonSubmit>\r\n    </FormStyled>\r\n  );\r\n};\r\n","import { RegisterForm } from \"../components/registerForm/RegisterForm\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div>\r\n      <title>Registration</title>\r\n      <RegisterForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n// import { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n// import db from \"../firebase\"; // Імпортуйте ваш екземпляр Firestore\r\n\r\nimport { saveUserProfile, syncUserProfile } from \"./user\";\r\nconst auth = getAuth();\r\n\r\n/**\r\n * Реєстрація нового користувача\r\n */\r\nexport const register = async (userData) => {\r\n  try {\r\n    const { email, password, name } = userData;\r\n    const { user } = await createUserWithEmailAndPassword(\r\n      auth,\r\n      email,\r\n      password\r\n    );\r\n\r\n    // Збереження профілю у Firestore\r\n    await saveUserProfile(user.uid, {\r\n      name: name || \"Ім'я Користувача\",\r\n      email: user.email,\r\n      phone: \"\",\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"user\",\r\n      JSON.stringify({ uid: user.uid, email: user.email })\r\n    );\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Помилка реєстрації:\", error.message);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Вхід через email і пароль\r\n */\r\nexport const logInWithEmail = async (userData) => {\r\n  try {\r\n    const { email, password } = userData;\r\n    const { user } = await signInWithEmailAndPassword(auth, email, password);\r\n\r\n    const userProfile = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n    };\r\n\r\n    await syncUserProfile(user);\r\n    await saveUserProfile(user.uid, userProfile);\r\n\r\n    // Збереження профілю в localStorage\r\n    localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n\r\n    return userProfile; // Повертаємо профіль користувача\r\n  } catch (error) {\r\n    console.error(\"Помилка входу:\", error.message);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Вхід через Google\r\n */\r\nexport const logInWithGoogle = async () => {\r\n  try {\r\n    const provider = new GoogleAuthProvider();\r\n    const { user } = await signInWithPopup(auth, provider);\r\n\r\n    const userProfile = {\r\n      uid: user.uid,\r\n      name: user.displayName,\r\n      email: user.email,\r\n      photoURL: user.photoURL, // URL фото профілю з Google\r\n    };\r\n\r\n    await syncUserProfile(user);\r\n    await saveUserProfile(user.uid, userProfile);\r\n\r\n    // Збереження профілю в localStorage\r\n    localStorage.setItem(\"user\", JSON.stringify(userProfile));\r\n\r\n    return userProfile; // Повертаємо профіль користувача\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n/**\r\n * Вихід з системи\r\n */\r\nexport const logOut = async () => {\r\n  try {\r\n    await signOut(auth);\r\n    localStorage.removeItem(\"user\");\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Помилка виходу:\", error.message);\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n","import type { Action, Mutation } from './mutation'\nimport { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport type { QueryClient } from './queryClient'\nimport { Subscribable } from './subscribable'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverResult,\n  MutationObserverOptions,\n} from './types'\nimport { shallowEqualObjects } from './utils'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n    this.currentMutation?.setOptions(this.options)\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.length) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions && this.hasListeners()) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport {\n  notifyManager,\n  parseMutationArgs,\n  MutationObserver,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport { shouldThrowError } from './utils'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n","'use client'\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n","export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n"],"names":["FormStyled","styled","_templateObject","_taggedTemplateLiteral","InputStyled","_templateObject2","ButtonSubmit","_templateObject3","Divider","_templateObject4","GoogleButton","_templateObject5","RegisterForm","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","name","setName","navigate","useNavigate","registerMutation","useMutation","register","onSuccess","onError","error","alert","message","mutate","_jsxs","onSubmit","e","preventDefault","children","_jsx","placeholder","value","type","onChange","target","required","auth","getAuth","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userData","_yield$createUserWith","user","wrap","_context","prev","next","createUserWithEmailAndPassword","sent","saveUserProfile","uid","phone","localStorage","setItem","JSON","stringify","abrupt","t0","console","Error","stop","_x","apply","arguments","logInWithEmail","_ref2","_callee2","_yield$signInWithEmai","userProfile","_context2","signInWithEmailAndPassword","syncUserProfile","_x2","logInWithGoogle","_ref3","_callee3","provider","_yield$signInWithPopu","_context3","GoogleAuthProvider","signInWithPopup","displayName","photoURL","log","logOut","_ref4","_callee4","_context4","signOut","removeItem","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","key","this","bind","reset","_this$currentMutation","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","currentMutation","observer","_this$currentMutation2","listeners","length","removeObserver","action","notifyOptions","currentResult","undefined","variables","mutateOptions","build","_objectSpread","addObserver","execute","state","getDefaultState","result","isLoading","status","isSuccess","isError","isIdle","_this2","notifyManager","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","hasListeners","data","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","forEach","listener","Subscribable","arg1","arg2","arg3","_React$useState","React","queryClient","useSyncExternalStore","onStoreChange","subscribe","getCurrentResult","shouldThrowError","useErrorBoundary","noop","useSyncExternalStore$1","_useErrorBoundary","params","_toConsumableArray"],"sourceRoot":""}